<!--
build.xml

Ant build file for SCIFIO project.
Download Apache Ant from http://ant.apache.org/.
Type "ant -p" for a list of targets.
-->

<project name="scifio" default="jar" basedir=".">
  <description>Build file for SCIFIO project</description>
  <property name="root.dir" location="../.."/>
  <import file="${root.dir}/ant/java.xml"/>
  <import file="${root.dir}/ant/xsd-fu.xml"/>
  <property file="build.properties"/>

  <target name="generate-source">
    <property name="xsdfu.metadatapath" value="${gensrc.dir}/loci/formats/meta"/>
    <property name="xsdfu.omepath" value="${gensrc.dir}/loci/formats/ome"/>

    <delete dir="${xsdfu.metadatapath}"/>
    <delete dir="${xsdfu.omepath}"/>

    <!-- Generate the metadata interfaces -->
    <xsd_fu lang="Java" output="${xsdfu.metadatapath}">
      <arg value="metadata_store"/>
    </xsd_fu>
    <xsd_fu lang="Java" output="${xsdfu.metadatapath}">
      <arg value="metadata_retrieve"/>
    </xsd_fu>
    <!-- Generate the metadata implementations -->
    <xsd_fu lang="Java" output="${xsdfu.metadatapath}">
      <arg value="metadata_aggregate"/>
    </xsd_fu>
    <xsd_fu lang="Java" output="${xsdfu.metadatapath}">
      <arg value="dummy_metadata"/>
    </xsd_fu>
    <xsd_fu lang="Java" output="${xsdfu.metadatapath}">
      <arg value="filter_metadata"/>
    </xsd_fu>
    <!-- Generate the OME XML metadata interface -->
    <xsd_fu lang="Java" output="${xsdfu.omepath}">
      <arg value="omexml_metadata"/>
    </xsd_fu>
  </target>

  <target name="test" depends="jar,compile-tests,test-no-ome-xml,
    test-no-lurawave, test-no-jai"
    description="run tests">
    <!-- NOTE: Overrides default "test" target from java.xml -->
    <copy tofile="${build.dir}/testng.xml" overwrite="true"
      file="${tests.dir}/loci/formats/utests/testng.xml"/>
    <testng haltonfailure="true" groups="all" testname="${component.name}">
      <classpath>
        <pathelement location="${root.dir}/tools/"/><!-- log4j.properties -->
        <pathelement location="${test-classes.dir}"/>
        <pathelement location="${classes.dir}"/>
        <pathelement path="${component.runtime-cp}"/>
      </classpath>
      <xmlfileset file="${build.dir}/testng.xml"/>
      <jvmarg value="-Dlurawave.license=XXX"/>
    </testng>
  </target>

  <target name="test-no-lurawave" depends="compile-tests"
    description="run missing LuraWave JAR tests" if="doTests">
    <copy tofile="${build.dir}/testng.xml" overwrite="true"
      file="${tests.dir}/loci/formats/utests/testng-no-lurawave.xml"/>
    <testng failureProperty="failedTest">
      <classpath>
        <pathelement location="${root.dir}/tools/"/><!-- log4j.properties -->
        <pathelement location="${test-classes.dir}"/>
        <pathelement location="${classes.dir}"/>
        <pathelement path="${component.cp.no-lurawave}"/>
      </classpath>
      <xmlfileset file="${build.dir}/testng.xml"/>
      <jvmarg value="-mx${testng.memory}"/>
    </testng>
    <fail if="failedTest"/>
  </target>

  <target name="test-no-jai" depends="compile-tests"
    description="run missing JAI ImageIO JAR tests" if="doTests">
    <copy tofile="${build.dir}/testng.xml" overwrite="true"
      file="${tests.dir}/loci/formats/utests/testng-no-jai.xml"/>
    <testng failureProperty="failedTest">
      <classpath>
        <pathelement location="${root.dir}/tools/"/><!-- log4j.properties -->
        <pathelement location="${test-classes.dir}"/>
        <pathelement location="${classes.dir}"/>
        <pathelement path="${component.cp.no-jai}"/>
      </classpath>
      <xmlfileset file="${build.dir}/testng.xml"/>
      <jvmarg value="-mx${testng.memory}"/>
    </testng>
    <fail if="failedTest"/>
  </target>

  <target name="test-no-ome-xml" depends="compile-tests"
    description="run missing OME-XML JAR tests" if="doTests">
    <copy tofile="${build.dir}/testng.xml" overwrite="true"
      file="${tests.dir}/loci/formats/utests/testng-no-ome-xml.xml"/>
    <testng failureProperty="failedTest">
      <classpath>
        <pathelement location="${root.dir}/tools/"/><!-- log4j.properties -->
        <pathelement location="${test-classes.dir}"/>
        <pathelement location="${classes.dir}"/>
        <pathelement path="${component.cp.no-xml}"/>
      </classpath>
      <xmlfileset file="${build.dir}/testng.xml"/>
      <jvmarg value="-mx${testng.memory}"/>
    </testng>
    <fail if="failedTest"/>
  </target>
</project>
