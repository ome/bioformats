<?xml version = "1.0" encoding = "UTF-8"?>
<!--
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    #
    # Copyright (C) 2003 - 2014 Open Microscopy Environment
    #       Massachusetts Institute of Technology,
    #       National Institutes of Health,
    #       University of Dundee,
    #       University of Wisconsin at Madison
    #
    # This work is licensed under the
    #       Creative Commons Attribution 3.0 Unported License.
    # To view a copy of this license, visit
    #       http://creativecommons.org/licenses/by/3.0/
    # or send a letter to
    #       Creative Commons, 444 Castro Street, Suite 900,
    #       Mountain View, California, 94041, USA.
    # For attribution instructions, visit
    #       http://www.openmicroscopy.org/info/attribution
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<!--
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	# Written by:  Andrew J Patterson
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<xsd:schema xmlns = "http://www.openmicroscopy.org/Schemas/ROI/2013-10-dev-5"
	targetNamespace = "http://www.openmicroscopy.org/Schemas/ROI/2013-10-dev-5"
	xmlns:OME = "http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5"
	xmlns:BIN="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5"
	xmlns:SA="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5"
	xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
	version = "1"
	elementFormDefault = "qualified">
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5/ome.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5/BinaryFile.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5/SA.xsd"/>

	<xsd:element name="ROI"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ROIs</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				A four dimensional 'Region of Interest'.
				If they are not used, and the Image has more than one plane,
				the entire set of planes is assumed to be included in the ROI.
				Multiple ROIs may be specified.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="1" maxOccurs="1">
					<xsd:element name="Union" minOccurs="1" maxOccurs="1">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element ref="Shape" minOccurs="1" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							A description for the ROI. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="ROIID"/>
			<xsd:attribute name="Name" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The Name identifies the ROI to the user. [plane text string]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Namespace" use="optional" type="xsd:anyURI"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Shape"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Shapes</plural><abstractproprietary/></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The shape element contains a single specific ROI shape and links
				that to any channels, and a timepoint and a z-section. It also
				records any transform applied to the ROI shape.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="1" maxOccurs="1">
					<xsd:element ref="Line" minOccurs="1" maxOccurs="1"/>
					<xsd:element ref="Rectangle" minOccurs="1" maxOccurs="1"/>
					<xsd:element ref="Mask" minOccurs="1" maxOccurs="1"/>
					<xsd:element ref="Ellipse" minOccurs="1" maxOccurs="1"/>
					<xsd:element ref="Point" minOccurs="1" maxOccurs="1"/>
					<xsd:element ref="Polyline" minOccurs="1" maxOccurs="1"/>
					<xsd:element ref="Polygon" minOccurs="1" maxOccurs="1"/>
					<xsd:element ref="Label" minOccurs="1" maxOccurs="1"/>
				</xsd:choice>
				<xsd:element name="Transform" type="AffineTransform" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							This is a matrix used to transform the shape.
							The element has 6 xsd:float attributes. If the element
							is present then all 6 values must be included.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="FillColor" use="optional" type="OME:Color">
				<xsd:annotation>
					<xsd:documentation>
						The color of the fill - encoded as RGBA
						The value "-1" is #FFFFFFFF so solid white (it is a signed 32 bit value)
						NOTE: Prior to the 2012-06 schema the default value was incorrect and produced a transparent red not solid white.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FillRule" use="optional">
				<xsd:simpleType>
					<xsd:annotation>
						<xsd:documentation>
							The rule used to decide which parts of the shape to
							fill. [enumeration]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="EvenOdd"/>
						<xsd:enumeration value="NonZero"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="StrokeColor" use="optional" type="OME:Color">
				<xsd:annotation>
					<xsd:documentation>
						The color of the stroke  - encoded as RGBA
						The value "-1" is #FFFFFFFF so solid white (it is a signed 32 bit value)
						NOTE: Prior to the 2012-06 schema the default value was incorrect and produced a transparent red not solid white.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="StrokeWidth" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The width of the stroke. Units are set by StrokeWidthUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="StrokeWidthUnit" use="optional" default="pixel" type="OME:UnitsLength">
				<xsd:annotation>
					<xsd:documentation>
						The units used for the stroke width.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="StrokeDashArray" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						e.g. "none", "10 20 30 10"
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="LineCap" use="optional">
				<xsd:simpleType>
					<xsd:annotation>
						<xsd:documentation>
							The shape of the end of the line. [enumeration]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Butt"/>
						<xsd:enumeration value="Line"/>
						<xsd:enumeration value="Square"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Text" use="optional" type="xsd:string"/>
			<xsd:attribute name="FontFamily" use="optional">
				<xsd:simpleType>
					<xsd:annotation>
						<xsd:documentation>
							The font family used to draw the text. [enumeration]
							Note: these values are all lower case so they match
							the standard HTML/CSS values. "fantasy" has been
							included for completeness we do not recommended its
							regular use.
						</xsd:documentation>
					</xsd:annotation>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="serif"/>
						<xsd:enumeration value="sans-serif"/>
						<xsd:enumeration value="cursive"/>
						<xsd:enumeration value="fantasy"/>
						<xsd:enumeration value="monospace"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="FontSize" use="optional" type="OME:NonNegativeInt">
				<xsd:annotation>
					<xsd:documentation>
						Size of the font. Units are set by FontSizeUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FontSizeUnit" use="optional" default="pt" type="OME:UnitsLength">
				<xsd:annotation>
					<xsd:documentation>
						The units used for the font size.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FontStyle" use="optional">
				<xsd:simpleType>
					<xsd:annotation>
						<xsd:documentation>
							The style and weight applied to the text.  [enumeration]
							This is a simplified combination of the HTML/CSS
							attributes font-style AND font-weight.
						</xsd:documentation>
					</xsd:annotation>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Bold"/>
						<xsd:enumeration value="BoldItalic"/>
						<xsd:enumeration value="Italic"/>
						<xsd:enumeration value="Normal"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Visible" use="optional" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>
						Controls whether the shape is currently visible,
						true is visible, false is hidden.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>

			<xsd:attribute name="Locked" use="optional" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>
						Controls whether the shape is locked and read only,
						true is locked, false is editable.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>


			<xsd:attribute name="ID" use="required" type="ShapeID"/>
			<xsd:attribute name="TheZ" use="optional" type="OME:NonNegativeInt">
				<xsd:annotation>
					<xsd:documentation>
						The z-section the ROI applies to. If not specified then
						the ROI applies to all the z-sections of the image. [units:none]
						This is numbered from 0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TheT" use="optional" type="OME:NonNegativeInt">
				<xsd:annotation>
					<xsd:documentation>
						The timepoint the ROI applies to. If not specified then
						the ROI applies to all the timepoints of the image. [units:none]
						This is numbered from 0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TheC" use="optional" type="OME:NonNegativeInt">
				<xsd:annotation>
					<xsd:documentation>
						The channel the ROI applies to. If not specified then
						the ROI applies to all the channels of the image. [units:none]
						This is numbered from 0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Rectangle"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Rectangles</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				A simple rectangle object. If rotation is required apply a
				transformation at the Shape level.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
					<xsd:attribute name="X" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The X value of the left edge or the rectangle. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Y" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The y value of the top edge or the rectangle. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Width" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The width of the rectangle. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Height" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The height of the rectangle. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Mask"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Masks</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The Mask ROI shape is a link to a BIN:BinData object that is
				a BIT mask drawn on top of the image as an ROI. It is applied
				at the same scale, pixel to pixel, as the Image the ROI is
				applied to, unless a transform is applied at the shape level.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="BIN:BinData" minOccurs="1" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="X" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The X coordinate of the left side of the image. [units pixels]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Y" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The Y coordinate of the top side of the image. [units pixels]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Width" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The width of the mask. [units pixels]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Height" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The height of the mask. [units pixels]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Point"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Points</plural></xsdfu></xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
					<xsd:attribute name="X" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The X coordinate of the point. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Y" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Y coordinate of the point. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Ellipse"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Ellipses</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				A simple ellipse object. If rotation is required apply a
				transformation at the Shape level.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
					<xsd:attribute name="X" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The X coordinate of the center of the ellipse. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Y" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Y coordinate of the center of the ellipse. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="RadiusX" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The horizontal radius of the ellipse. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="RadiusY" use="required" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The vertical radius of the ellipse. [units pixels]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Line"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Lines</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				A straight line defined by it's end points.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="X1" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation> The X coordinate of the start of the line. [units pixels]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Y1" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation> The Y coordinate of the start of the line. [units pixels]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="X2" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation> The X coordinate of the end of the line. [units pixels]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Y2" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation> The Y coordinate of the end of the line. [units pixels]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="MarkerStart" use="optional" type="Marker"/>
			<xsd:attribute name="MarkerEnd" use="optional" type="Marker"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Polyline"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Polylines</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The Polyline defines open shapes formed of straight
				lines. Note: Polyline uses counterclockwise winding (this is the
				default OpenGL behavior)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Points" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation> The points of the polyline are defined as a list of comma
						separated x,y coordinates seperated by spaces like "x1,y1 x2,y2 x3,y3" e.g.
						"0,0 1,2 3,5" </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="MarkerStart" use="optional" type="Marker"/>
			<xsd:attribute name="MarkerEnd" use="optional" type="Marker"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Polygon"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Polygons</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The Polygon defines closed shapes formed of straight
				lines. Note: Polygon uses counterclockwise winding (this is the
				default OpenGL behavior)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Points" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation> The points of the Polygon are defined as a list of comma
						separated x,y coordinates seperated by spaces like "x1,y1 x2,y2 x3,y3" e.g.
						"0,0 1,2 3,5" </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Label"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Labels</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The text label. Any transformation should be applied at the
				shape level.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="X" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation> This defines the X coordinate of the current text position
						of the first character in the string. [units pixels] </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Y" use="required" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation> This defines the Y coordinate of the current text position
						of the first character in the string. [units pixels] </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="ROIRef"> <!-- top level definition -->
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="OME:Reference">
					<xsd:attribute name="ID" use="required" type="ROIID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>


	<xsd:complexType name="AffineTransform">
		<xsd:annotation>
			<xsd:documentation>
				A matrix used to transform the shape.
				⎡ A00, A01, A02 ⎤
				⎢ A10, A11, A12 ⎥
				⎣ 0,   0,   1   ⎦
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="A00" use="required" type="xsd:float"/>
		<xsd:attribute name="A10" use="required" type="xsd:float"/>
		<xsd:attribute name="A01" use="required" type="xsd:float"/>
		<xsd:attribute name="A11" use="required" type="xsd:float"/>
		<xsd:attribute name="A02" use="required" type="xsd:float"/>
		<xsd:attribute name="A12" use="required" type="xsd:float"/>
	</xsd:complexType>

	<xsd:simpleType name="ROIID"> <!-- top level definition -->
		<xsd:restriction base="OME:LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:ROI:\S+)|(ROI:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="ShapeID"> <!-- top level definition -->
		<xsd:restriction base="OME:LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Shape:\S+)|(Shape:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="Marker"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Markers</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				Shape of marker on the end of a line. [enumeration]
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Arrow"/>
			<xsd:enumeration value="Circle"/>
			<xsd:enumeration value="Square"/>
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>
