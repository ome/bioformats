<?xml version = "1.0" encoding = "UTF-8"?>
<!--
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    #
    # Copyright (C) 2014 Open Microscopy Environment
    #       Massachusetts Institute of Technology,
    #       National Institutes of Health,
    #       University of Dundee,
    #       University of Wisconsin at Madison
    #
    # This work is licensed under the
    #       Creative Commons Attribution 3.0 Unported License.
    # To view a copy of this license, visit
    #       http://creativecommons.org/licenses/by/3.0/
    # or send a letter to
    #       Creative Commons, 444 Castro Street, Suite 900,
    #       Mountain View, California, 94041, USA.
    # For attribution instructions, visit
    #       http://www.openmicroscopy.org/info/attribution
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<!--
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	# Written by:  Andrew J Patterson
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<xsd:schema xmlns="http://www.openmicroscopy.org/Schemas/RD/2013-10-dev-5"
	targetNamespace="http://www.openmicroscopy.org/Schemas/RD/2013-10-dev-5"
	xmlns:OME="http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5"
	xmlns:BIN="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5"
	xmlns:SA="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" version="1" elementFormDefault="qualified">
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5/BinaryFile.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5/SA.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5/ome.xsd"/>

	<xsd:element name="RenderingDefinitions"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation> An unordered collection of render definitions attached to objects in
				the OME data model. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="LookupTable" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="Renderer" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="VirtualChannel" minOccurs="1" maxOccurs="1"/>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="LookupTable"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>LookupTables</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> A lookup table used by an output renderer. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A description for the lookup table. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:choice minOccurs="1" maxOccurs="1">
					<xsd:element ref="BIN:BinData" minOccurs="1" maxOccurs="1"/>
					<xsd:element ref="OME:TiffLookupTable" minOccurs="1" maxOccurs="1"/>
				</xsd:choice>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="LookupTableID"/>
			<xsd:attribute name="Name" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation> A name for the lookup table.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="RequiredPixelType" use="optional" type="OME:PixelType">
				<xsd:annotation>
					<xsd:documentation>
						The required type used to represent each pixel in the image
						for this lookup table to be applied. If not present it is
						assumed the table is not tied to one pixel type.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="LookupTableRef"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation>
				The LookupTableRef element is a reference to a lookup table.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="OME:Reference">
					<xsd:attribute name="ID" use="required" type="LookupTableID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="LookupTableID">
		<xsd:restriction base="OME:LSID">
			<xsd:pattern
				value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:LookupTable:\S+)|(LookupTable:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:element name="Renderer"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Renderers</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> A Renderer that processes the channels from the image into a display space. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A description for the renderer. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="VirtualChannelSettings" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Normalizer" minOccurs="1" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>If only one normalizer is given it is applied to all channels.
							If more than one normaliser is needed one must be given for each
							channel and they will be applied in order.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Processor" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="OutputRenderer" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="Compositor" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="RendererID"/>
			<xsd:attribute name="Name" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation> A name for the renderer.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="XXXXX" use="required" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="RendererSettings">
		<!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>RendererSettingsCombinations</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> This holds the setting applied to a renderer as well as a reference
				to the renderer. The ID is the renderer used in this case. The values stored in
				RendererSettings represent the variable that describe how the Renderer is to be
				applied to the image. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="OME:Settings">
					<xsd:sequence>
						<xsd:element name="ChannelMapping" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:appinfo><xsdfu><plural>ChannelMappings</plural></xsdfu></xsd:appinfo>
								<xsd:documentation>This defines how the channels mentioned in the renderer map to those in the image.
								If these elements are not specified the mapping is assumed to be direct (0->0, 1->1, etc.) </xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:attribute name="ImageChannel" type="OME:NonNegativeInt" use="required">
									<xsd:annotation>
										<xsd:documentation>The number of the channel in the image</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
								<xsd:attribute name="RendererChannel" type="OME:NonNegativeInt" use="required">
									<xsd:annotation>
										<xsd:documentation>The number of the channel in the renderer</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" use="required" type="RendererID"/>
					<xsd:attribute name="BackgroundColor" use="optional" type="OME:Color">
						<xsd:annotation>
							<xsd:documentation> The Background Color used by the renderer when 
								rendering sparse data.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="RendererID">
		<xsd:restriction base="OME:LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Renderer:\S+)|(Renderer:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:element name="VirtualChannel"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>VirtualChannels</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> An input channel for the renderer created by pre-processing other channels.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A description for the VirtualChannel. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="Processor" minOccurs="1" maxOccurs="unbounded"/>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="VirtualChannelID"/>
			<xsd:attribute name="VirtualChannelType" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The method used to combine channels to create the VirtualChannel.
						TODO: Is this required?
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="XXXXX"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="VirtualChannelSettings"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>RendererSettingsCombinations</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> This holds the setting applied to a renderer as well as a reference
				to the renderer. The ID is the renderer used in this case. The values stored in
				RendererSettings represent the variable that describe how the Renderer is to be
				applied to the image. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="OME:Settings">
					<xsd:attribute name="ID" use="required" type="VirtualChannelID"/>
					<xsd:attribute name="ReplacedChannelBase" default="0" type="OME:NonNegativeInt">
						<xsd:annotation>
							<xsd:documentation> The virtual channel replaces one or more channel with it's output.
								This specifies the first channel in the render to map this virtual channel to. 
								If the virtual channel produces more than one output channel the subsequent channels
								are numbered sequentially from this base.
								
								By default the value used is 0 so the input channels are overwritten.
								If on a three channel image (0,1,2) the value 3 is given for this using
								a virtual channel that produces one out channel then
								the result will be the four channel image (0,1,2,3)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="VirtualChannelID">
		<xsd:restriction base="OME:LSID">
			<xsd:pattern
				value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:VirtualChannel:\S+)|(VirtualChannel:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:element name="Normalizer"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Normalizers</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> A Normalizer maps from the pixel space of the image
					to the 0-1 real number space used by the processor pipeline. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A description for the Normalizer. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="OME:Map" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A collection of settings for the normalizer.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation> A name for the Normalizer.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="NormalizerType" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The method used by the Normalizer to map the input space to the processing space.
						TODO: Is this required?
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Linear"/>
						<xsd:enumeration value="Polynomial"/>
						<xsd:enumeration value="Exponential"/>
						<xsd:enumeration value="Logramithic"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Processor"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Processors</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> A pixel value processor working in the 0-1 normalised space. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A description for the processor. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="OME:Map" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A collection of settings for the processor.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation> A name for the processor.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ProcessorType" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The method used to process the channel.
						TODO: Is this required?
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="XXXXX"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="OutputRenderer"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>OutputRenderers</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> An output renderer converts the 0-1 normalised space
				used by the processors into the output pixel type used by the display. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A description for the output renderer. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="LookupTableRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="OME:Map" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A collection of settings for the output renderer.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation> A name for the output renderer.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Compositor"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Compositors</plural></xsdfu></xsd:appinfo>
			<xsd:documentation> A compositor used when combining overlapping images. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A description for the compositor. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="OME:Map" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> A collection of settings for the compositor.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation> A name for the output compositor.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="BlendMode" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The blend mode used when combining overlapping images.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Add"/>
						<xsd:enumeration value="Average"/>
						<xsd:enumeration value="Multiply"/>
						<xsd:enumeration value="XXXXX"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>

