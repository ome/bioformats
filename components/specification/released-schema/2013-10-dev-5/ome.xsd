<?xml version = "1.0" encoding = "UTF-8"?>
<!--
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    #
    # Copyright (C) 2002 - 2014 Open Microscopy Environment
    #       Massachusetts Institute of Technology,
    #       National Institutes of Health,
    #       University of Dundee,
    #       University of Wisconsin at Madison
    #
    # This work is licensed under the
    #       Creative Commons Attribution 3.0 Unported License.
    # To view a copy of this license, visit
    #       http://creativecommons.org/licenses/by/3.0/
    # or send a letter to
    #       Creative Commons, 444 Castro Street, Suite 900,
    #       Mountain View, California, 94041, USA.
    # For attribution instructions, visit
    #       http://www.openmicroscopy.org/info/attribution
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<!--
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	# Written by: Ilya G. Goldberg, Andrew J Patterson
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<xsd:schema xmlns="http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5"
	targetNamespace="http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:OME="http://www.openmicroscopy.org/Schemas/OME/2013-10-dev-5"
	xmlns:BIN="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5"
	xmlns:SPW="http://www.openmicroscopy.org/Schemas/SPW/2013-10-dev-5"
	xmlns:SA="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5"
	xmlns:ROI="http://www.openmicroscopy.org/Schemas/ROI/2013-10-dev-5"
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
	version="1"
	elementFormDefault="qualified">
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/BinaryFile/2013-10-dev-5/BinaryFile.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/SPW/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/SPW/2013-10-dev-5/SPW.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/SA/2013-10-dev-5/SA.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/ROI/2013-10-dev-5"
		schemaLocation="http://www.openmicroscopy.org/Schemas/ROI/2013-10-dev-5/ROI.xsd"/>

	<xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>

	<xsd:annotation>
		<xsd:documentation>
			Open Microscopy Environment
			OME XML Schema June 2013
			Author:  Ilya G. Goldberg, Andrew J Patterson
		</xsd:documentation>
	</xsd:annotation>

	<!-- Main OME element -->
	<xsd:element name="OME"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation>
				The OME element is a container for all information objects accessible by OME.
				These information objects include descriptions of the imaging experiments
				and the people who perform them, descriptions of the microscope, the resulting
				images and how they were acquired, the analyses performed on those images,
				and the analysis results themselves.
				An OME file may contain any or all of this information.

				With the creation of the Metadata Only Companion OME-XML and Binary Only OME-TIFF files
				the top level OME node has changed slightly.
				It can EITHER:
				    Contain all the previously expected elements
				OR:
				    Contain a single BinaryOnly element that points at
				    its Metadata Only Companion OME-XML file.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Rights" minOccurs="0" maxOccurs="1"/>
				<xsd:choice>
					<!-- Either: standard expected elements -->
					<xsd:sequence>
						<xsd:element ref="Project" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="Dataset" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="Experiment" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="SPW:Plate" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="SPW:Screen" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="Experimenter" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="ExperimenterGroup" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="Instrument" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="Image" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element ref="SA:StructuredAnnotations" minOccurs="0" maxOccurs="1"/>
						<xsd:element ref="ROI:ROI" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
					<!-- Or: Single BinaryOnly element -->
					<xsd:element name="BinaryOnly" minOccurs="1" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation> Pointer to an external metadata file. If this
								element is present, then no other metadata may be present in this
								file, i.e. this file is a place-holder. </xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="MetadataFile" type="xsd:string" use="required">
								<xsd:annotation>
									<xsd:documentation> Filename of the OME-XML metadata file for
										this binary data. If the file cannot be found, a search can
										be performed based on the UUID. </xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="UUID" type="UniversallyUniqueIdentifier"
								use="required">
								<xsd:annotation>
									<xsd:documentation> The unique identifier of another OME-XML
										block whose metadata describes the binary data in this file.
										This UUID is considered authoritative regardless of
										mismatches in the filename. </xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
						</xsd:complexType>
					</xsd:element>
					<!-- End of MetadataOnly Element -->
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute name="UUID" type="UniversallyUniqueIdentifier" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						This unique identifier is used to keep track of multi part files.
						It allows the links between files to survive renaming.

						While OPTIONAL in the general case this is REQUIRED in a
						MetadataOnly Companion to a collection of BinaryOnly files.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Creator" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						This is the name of the creating application of the OME-XML
						and preferably its full version.
						e.g "CompanyName, SoftwareName, V2.6.3456"
						This is optional but we hope it will be set by applications
						writing out OME-XML from scratch.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>

		<!-- Unique IDs -->
		<xsd:key name="ChannelIDKey"><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="DatasetIDKey"><xsd:selector xpath="OME:Dataset"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="DetectorIDKey"><xsd:selector xpath="OME:Instrument/OME:Detector"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="DichroicIDKey"><xsd:selector xpath="OME:Instrument/OME:Dichroic"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ExperimentIDKey"><xsd:selector xpath="OME:Experiment"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ExperimenterIDKey"><xsd:selector xpath="OME:Experimenter"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="FilterIDKey"><xsd:selector xpath="OME:Instrument/OME:Filter"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="FilterSetIDKey"><xsd:selector xpath="OME:Instrument/OME:FilterSet"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ExperimenterGroupIDKey"><xsd:selector xpath="OME:ExperimenterGroup"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ImageIDKey"><xsd:selector xpath="OME:Image"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="InstrumentIDKey"><xsd:selector xpath="OME:Instrument"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="LightSourceIDKey"><xsd:selector xpath="OME:Instrument/OME:LightSource"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="MicrobeamManipulationIDKey"><xsd:selector xpath="OME:Experiment/OME:MicrobeamManipulation"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ObjectiveIDKey"><xsd:selector xpath="OME:Instrument/OME:Objective"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="PixelsIDKey"><xsd:selector xpath="OME:Image/OME:Pixels"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="PlateIDKey"><xsd:selector xpath="SPW:Plate"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ProjectIDKey"><xsd:selector xpath="OME:Project"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ReagentIDKey"><xsd:selector xpath="SPW:Screen/SPW:Reagent"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ScreenAcquisitionIDKey"><xsd:selector xpath="SPW:Screen/SPW:ScreenAcquisition"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ScreenIDKey"><xsd:selector xpath="SPW:Screen"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="WellIDKey"><xsd:selector xpath="SPW:Plate/SPW:Well"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="WellSampleIDKey"><xsd:selector xpath="SPW:Plate/SPW:Well/SPW:WellSample"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ROIIDKey"><xsd:selector xpath="ROI:ROI"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="ShapeIDKey"><xsd:selector xpath="ROI:ROI/ROI:Union/ROI:Shape"/><xsd:field xpath="@ID"/></xsd:key>
		<xsd:key name="AnnotationIDKey"><xsd:selector xpath="SA:StructuredAnnotations/*"/><xsd:field xpath="@ID"/></xsd:key>
		
		<!-- Unique references -->
		<xsd:key name="WellSampleImageRefIDKey"><xsd:selector xpath="SPW:Plate/SPW:Well/SPW:WellSample/OME:ImageRef"/><xsd:field xpath="@ID"/></xsd:key>

		<!-- Valid references -->
		<xsd:keyref name="DatasetExperimenterIDKeyRef" refer="OME:ExperimenterIDKey" ><xsd:selector xpath="OME:Dataset/OME:ExperimenterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="DatasetExperimenterGroupIDKeyRef" refer="OME:ExperimenterGroupIDKey" ><xsd:selector xpath="OME:Dataset/OME:ExperimenterGroupRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="DatasetProjectIDKeyRef" refer="OME:ProjectIDKey" ><xsd:selector xpath="OME:Dataset/OME:ProjectRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ExperimentExperimenterIDKeyRef" refer="OME:ExperimenterIDKey" ><xsd:selector xpath="OME:Experiment/OME:ExperimenterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ExperimentMicrobeamManipulationExperimenterIDKeyRef" refer="OME:ExperimenterIDKey" ><xsd:selector xpath="OME:Experiment/OME:MicrobeamManipulation/OME:ExperimenterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ExperimentMicrobeamManipulationLightSourceSettingsLightSourceIDKeyRef" refer="OME:LightSourceIDKey" ><xsd:selector xpath="OME:Experiment/OME:MicrobeamManipulation/OME:LightSourceSettings"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ExperimenterExperimenterGroupIDKeyRef" refer="OME:ExperimenterGroupIDKey" ><xsd:selector xpath="OME:Experimenter/OME:ExperimenterGroupRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ExperimenterGroupContactExperimenterIDKeyRef" refer="OME:ExperimenterIDKey" ><xsd:selector xpath="OME:ExperimenterGroup/OME:Contact"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ExperimenterGroupLeaderExperimenterIDKeyRef" refer="OME:ExperimenterIDKey" ><xsd:selector xpath="OME:ExperimenterGroup/OME:Leader"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImageDatasetIDKeyRef" refer="OME:DatasetIDKey" ><xsd:selector xpath="OME:Image/OME:DatasetRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImageExperimenterIDKeyRef" refer="OME:ExperimenterIDKey" ><xsd:selector xpath="OME:Image/OME:ExperimenterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImageExperimentIDKeyRef" refer="OME:ExperimentIDKey" ><xsd:selector xpath="OME:Image/OME:ExperimentRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImageExperimenterGroupIDKeyRef" refer="OME:ExperimenterGroupIDKey" ><xsd:selector xpath="OME:Image/OME:ExperimenterGroupRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImageInstrumentIDKeyRef" refer="OME:InstrumentIDKey" ><xsd:selector xpath="OME:Image/OME:InstrumentRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImageMicrobeamManipulationIDKeyRef" refer="OME:MicrobeamManipulationIDKey" ><xsd:selector xpath="OME:Image/OME:MicrobeamManipulationRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImageObjectiveSettingsObjectiveIDKeyRef" refer="OME:ObjectiveIDKey" ><xsd:selector xpath="OME:Image/OME:ObjectiveSettings"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImagePixelsChannelDetectorSettingsDetectorIDKeyRef" refer="OME:DetectorIDKey" ><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel/OME:DetectorSettings"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImagePixelsChannelFilterSetIDKeyRef" refer="OME:FilterSetIDKey" ><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel/OME:FilterSetRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImagePixelsChannelLightPathExcitationFilterIDKeyRef" refer="OME:FilterIDKey" ><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel/OME:LightPath/OME:ExcitationFilterPath/OME:FilterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImagePixelsChannelLightPathExcitationDichroicIDKeyRef" refer="OME:DichroicIDKey" ><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel/OME:LightPath/OME:ExcitationFilterPath/OME:DichroicRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImagePixelsChannelLightPathDichroicIDKeyRef" refer="OME:DichroicIDKey" ><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel/OME:LightPath/OME:DichroicRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImagePixelsChannelLightPathEmissionFilterIDKeyRef" refer="OME:FilterIDKey" ><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel/OME:LightPath/OME:EmissionFilterPath/OME:FilterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImagePixelsChannelLightPathEmissionDichroicIDKeyRef" refer="OME:DichroicIDKey" ><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel/OME:LightPath/OME:EmissionFilterPath/OME:DichroicRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImagePixelsChannelLightSourceSettingsLightSourceIDKeyRef" refer="OME:LightSourceIDKey" ><xsd:selector xpath="OME:Image/OME:Pixels/OME:Channel/OME:LightSourceSettings"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="InstrumentFilterSetExcitationFilterIDKeyRef" refer="OME:FilterIDKey" ><xsd:selector xpath="OME:Instrument/OME:FilterSet/OME:ExcitationFilterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="InstrumentFilterSetDichroicIDKeyRef" refer="OME:DichroicIDKey" ><xsd:selector xpath="OME:Instrument/OME:FilterSet/OME:DichroicRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="InstrumentFilterSetEmissionFilterIDKeyRef" refer="OME:FilterIDKey" ><xsd:selector xpath="OME:Instrument/OME:FilterSet/OME:EmissionFilterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="InstrumentLightSourceLaserPumpLightSourceIDKey" refer="OME:LightSourceIDKey" ><xsd:selector xpath="OME:Instrument/OME:LightSource/OME:Laser/OME:Pump"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="PlateScreenIDKeyRef" refer="OME:ScreenIDKey" ><xsd:selector xpath="SPW:Plate/SPW:ScreenRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="PlateWellReagentIDKeyRef" refer="OME:ReagentIDKey" ><xsd:selector xpath="SPW:Plate/SPW:Well/SPW:ReagentRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="PlateWellWellSampleImageIDKeyRef" refer="OME:ImageIDKey" ><xsd:selector xpath="SPW:Plate/SPW:Well/SPW:WellSample/SPW:ImageRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ProjectExperimenterIDKeyRef" refer="OME:ExperimenterIDKey" ><xsd:selector xpath="OME:Project/OME:ExperimenterRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ProjectExperimenterGroupIDKeyRef" refer="OME:ExperimenterGroupIDKey" ><xsd:selector xpath="OME:Project/OME:ExperimenterGroupRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ScreenPlateIDKeyRef" refer="OME:PlateIDKey" ><xsd:selector xpath="SPW:Screen/SPW:PlateRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ScreenScreenAcquisitionWellSampleIDKeyRef" refer="OME:WellSampleIDKey" ><xsd:selector xpath="SPW:Screen/SPW:ScreenAcquisition/SPW:WellSampleRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ExperimentMicrobeamManipulationROIIDKeyRef" refer="OME:ROIIDKey" ><xsd:selector xpath="OME:Experiment/OME:MicrobeamManipulation/ROI:ROIRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="ImageROIIDKeyRef" refer="OME:ROIIDKey" ><xsd:selector xpath="OME:Image/ROI:ROIRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="AnnotationRefAnnotationIDKeyRef" refer="OME:AnnotationIDKey"><xsd:selector xpath=".//SA:AnnotationRef"/><xsd:field xpath="@ID"/></xsd:keyref>
		<xsd:keyref name="AnnotationAnnotatorExperimenterIDKeyRef" refer="OME:ExperimenterIDKey"><xsd:selector xpath="SA:StructuredAnnotations/*"/><xsd:field xpath="@Annotator"/></xsd:keyref>

	</xsd:element>

	<!-- Key pixel storage elements -->
	<xsd:element name="Image"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Images</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This element describes the actual image and its meta-data.
				The elements that are references (ending in Ref or Settings) refer to
				elements defined outside of the Image element. Ref elements are simple
				links, while Settings elements are links with additional values.

				If any of the required Image attributes or elements are missing, its
				guaranteed to be an invalid document. The required attributes and
				elements are ID and Pixels.

				ExperimenterRef is required for all Images with well formed LSIDs.
				ImageType is a vendor-specific designation of the type of image this is.
				Examples of ImageType include 'STK', 'SoftWorx', etc.
				The Name attributes are in all cases the name of the element
				instance. In this case, the name of the image, not necessarily the filename.
				Physical size of pixels are microns[µm].
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="AcquisitionDate" minOccurs="0" maxOccurs="1" type="xsd:dateTime">
					<xsd:annotation>
						<xsd:documentation>
							The acquisition date of the Image.
							The element contains an xsd:dateTime string based on the ISO 8601 format (i.e. 1988-04-07T18:39:09.359)

							YYYY-MM-DDTHH:mm:SS.sssZ
							Y - Year
							M - Month
							D - Day
							H - Hour
							m - minutes
							S - Seconds
							s - sub-seconds (optional)
							Z - Zone (optional) +HH:mm or -HH:mm or Z for UTC

							Note: xsd:dataTime supports a very wide date range with unlimited precision. The full date range
								and precision are not typically supported by platform- and language-specific libraries.
								Where the supported time precision is less than the precision used by the xsd:dateTime
								timestamp there will be loss of precision; this will typically occur via direct truncation
								or (less commonly) rounding.

								The year value can be large and/or negative. Any value covering the current or last century
								should be correctly processed, but some systems cannot process earlier dates.

								The sub-second value is defined as an unlimited number of digits after the decimal point.
								In Java a minimum of millisecond precision is guaranteed.
								In C++ microsecond precision is guaranteed, with nanosecond precision being available on 
								some platforms.

								Time zones are supported, eg '2013-10-24T11:52:33+01:00' for Paris, but in most cases it will
								be converted to UTC when the timestamp is written.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ExperimenterRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							A description for the image. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="ExperimentRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="ExperimenterGroupRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="InstrumentRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="ObjectiveSettings" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="ImagingEnvironment" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="StageLabel" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="Pixels" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="ROI:ROIRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="MicrobeamManipulationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="ImageID"/>
			<xsd:attribute name="Name" use="optional" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Pixels"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Pixels</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				Pixels is going to be removed in the future, but it is still required.

				This is just notice that the contents of Pixels will be
				moved up to Image in a future release. This is because there
				has only been 1 Pixels object in each Image for some time.
				The concept of multiple Pixels sets for one Image failed to
				take off. It is therefore redundant.

				The Image will be unreadable if any of the required Pixel attributes are missing.

				The Pixels themselves can be stored within the OME-XML compressed by plane, and encoded
				in Base64.
				Or the Pixels may be stored in TIFF format.

				The Pixels element should contain a list of BinData or TiffData, each containing a
				single plane of pixels. These Pixels elements, when read in document order,
				must produce a 5-D pixel array of the size specified in this element, and in the
				dimension order specified by 'DimensionOrder'.

				All of the values in the Pixels object when present should match the same value
				stored in any associated TIFF format (e.g. SizeX should be the same). Where there
				is a mismatch our readers will take the value from the TIFF structure as overriding
				the value in the OME-XML. This is simply a pragmatic decision as it increases the
				likelihood of reading data from a slightly incorrect file.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Channel" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><ordered/></xsdfu></xsd:appinfo>
					</xsd:annotation>
                </xsd:element>
				<xsd:choice minOccurs="1" maxOccurs="1">
					<xsd:element ref="BIN:BinData" minOccurs="1" maxOccurs="unbounded"/>
					<xsd:element ref="TiffData" minOccurs="1" maxOccurs="unbounded"/>
					<xsd:element ref="MetadataOnly" minOccurs="1" maxOccurs="1"/>
				</xsd:choice>
				<xsd:element ref="Plane" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="PixelsID"/>
			<xsd:attribute name="DimensionOrder" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The order in which the individual planes of data are interleaved.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="XYZCT"/>
						<xsd:enumeration value="XYZTC"/>
						<xsd:enumeration value="XYCTZ"/>
						<xsd:enumeration value="XYCZT"/>
						<xsd:enumeration value="XYTCZ"/>
						<xsd:enumeration value="XYTZC"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Type" use="required" type="PixelType">
				<xsd:annotation>
					<xsd:documentation>
						The variable type used to represent each pixel in the image.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SignificantBits" use="optional" type="PositiveInt">
				<xsd:annotation>
					<xsd:documentation>
						The number of bits within the type storing each pixel that are significant.
						e.g. you can store 12 bit data within a 16 bit type.
						This does not reduce the storage requirements but can be a useful indicator
						when processing or viewing the image data.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Interleaved" use="optional" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>
						How the channels are arranged within the data block:
						true if channels are stored RGBRGBRGB...;
						false if channels are stored RRR...GGG...BBB...
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="BigEndian" use="optional" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>
						This is true if the pixels data was written in BigEndian order.

						If this value is present it should match the value used in BinData
						or TiffData. If it does not a reader should honour the value used
						in the BinData or TiffData. This values is useful for MetadataOnly
						files and is to allow for future storage solutions.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SizeX" use="required" type="PositiveInt">
				<xsd:annotation>
					<xsd:documentation>Dimensional size of pixel data array [units:none]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SizeY" use="required" type="PositiveInt">
				<xsd:annotation>
					<xsd:documentation>Dimensional size of pixel data array [units:none]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SizeZ" use="required" type="PositiveInt">
				<xsd:annotation>
					<xsd:documentation>Dimensional size of pixel data array [units:none]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SizeC" use="required" type="PositiveInt">
				<xsd:annotation>
					<xsd:documentation>Dimensional size of pixel data array [units:none]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SizeT" use="required" type="PositiveInt">
				<xsd:annotation>
					<xsd:documentation>Dimensional size of pixel data array [units:none]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PhysicalSizeX" use="optional" type="PositiveFloat">
				<xsd:annotation>
					<xsd:documentation>Physical size of a pixel. Units are set by PhysicalSizeXUnit.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PhysicalSizeXUnit" use="optional" default="µm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the physical size of a pixel - default:microns[µm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PhysicalSizeY" use="optional" type="PositiveFloat">
				<xsd:annotation>
					<xsd:documentation>Physical size of a pixel. Units are set by PhysicalSizeYUnit.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PhysicalSizeYUnit" use="optional" default="µm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the physical size of a pixel - default:microns[µm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PhysicalSizeZ" use="optional" type="PositiveFloat">
				<xsd:annotation>
					<xsd:documentation>Physical size of a pixel. Units are set by PhysicalSizeZUnit.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PhysicalSizeZUnit" use="optional" default="µm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the physical size of a pixel - default:microns[µm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TimeIncrement" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						TimeIncrement is used for time series that have a global
						timing specification instead of per-timepoint timing info.
						For example in a video stream. Units are set by TimeIncrementUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TimeIncrementUnit" use="optional" default="s" type="UnitsTime">
				<xsd:annotation>
					<xsd:documentation>The units of the TimeIncrement - default:seconds[s].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Plane"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Planes</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The Plane object holds microscope stage and image timing data
				for a given channel/z-section/timepoint.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							This optional element is a hash of the plane's image data.
							It is a choice between all the support hash types.
							Currently the only method supported is SHA1.
						</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="HashSHA1" type="Hex40" minOccurs="1" maxOccurs="1"/>
				</xsd:choice>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="TheZ" use="required" type="NonNegativeInt">
				<xsd:annotation>
					<xsd:documentation>
						The Z-section this plane is for. [units:none]
						This is numbered from 0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TheT" use="required" type="NonNegativeInt">
				<xsd:annotation>
					<xsd:documentation>
						The timepoint this plane is for. [units:none]
						This is numbered from 0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TheC" use="required" type="NonNegativeInt">
				<xsd:annotation>
					<xsd:documentation>
						The channel this plane is for. [units:none]
						This is numbered from 0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="DeltaT" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						Time since the beginning of the experiment.
						Units are set by DeltaTUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="DeltaTUnit" use="optional" default="s" type="UnitsTime">
				<xsd:annotation>
					<xsd:documentation>The units of the DeltaT - default:seconds[s].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ExposureTime" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The length of the exposure.
						Units are set by ExposureTimeUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ExposureTimeUnit" use="optional" default="s" type="UnitsTime">
				<xsd:annotation>
					<xsd:documentation>The units of the ExposureTime - default:seconds[s].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PositionX" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The X position of the stage. Units are set by PositionXUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PositionXUnit" use="optional" default="reference frame" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the X stage position - default:[reference frame].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PositionY" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The Y position of the stage. Units are set by PositionYUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PositionYUnit" use="optional" default="reference frame" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the Y stage position - default:[reference frame].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PositionZ" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The Z position of the stage. Units are set by PositionZUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PositionZUnit" use="optional" default="reference frame" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the Z stage position - default:[reference frame].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Channel"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Channels</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				There must be one per channel in the Image, even for a single-plane image.
				And information about how each of them was acquired is stored in the various optional *Ref elements.  Each Logical Channel is composed of one or more
				ChannelComponents.  For example, an entire spectrum in an FTIR experiment may be stored in a single Logical Channel with each discrete wavenumber of the spectrum
				constituting a ChannelComponent of the FTIR Logical Channel.  An RGB image where the Red, Green and Blue components do not reflect discrete probes but are
				instead the output of a color camera would be treated similarly - one Logical channel with three ChannelComponents in this case.
				The total number of ChannelComponents for a set of pixels must equal SizeC.
				The IlluminationType attribute is a string enumeration which may be set to 'Transmitted', 'Epifluorescence', 'Oblique', or 'NonLinear'.
				The user interface logic for labeling a given channel for the user should use the first existing attribute in the following sequence:
				Name -> Fluor -> EmissionWavelength -> ChannelComponent/Index.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="LightSourceSettings" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="DetectorSettings" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="FilterSetRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="LightPath" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="ChannelID"/>
			<xsd:attribute name="Name" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A name for the channel that is suitable be presented to the user.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SamplesPerPixel" use="optional" type="PositiveInt">
				<xsd:annotation>
					<xsd:documentation>
						The number of samples the detector takes to form each pixel value. [units:none]
						Note: This is not the same as "Frame Averaging" - see Integration in DetectorSettings
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="IlluminationType" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The method of illumination used to capture the channel.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Transmitted"/>
						<xsd:enumeration value="Epifluorescence"/>
						<xsd:enumeration value="Oblique"/>
						<xsd:enumeration value="NonLinear"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="PinholeSize" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The optional PinholeSize attribute allows specifying adjustable
						pin hole diameters for confocal microscopes. Units are set by PinholeSizeUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PinholeSizeUnit" use="optional" default="µm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the pin hole diameter for confocal microscopes - default:microns[µm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="AcquisitionMode" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						AcquisitionMode describes the type of microscopy performed for each channel
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="WideField"/>
						<xsd:enumeration value="LaserScanningConfocalMicroscopy"/> <!-- CLSM or LSCM -->
						<xsd:enumeration value="SpinningDiskConfocal"/>
						<xsd:enumeration value="SlitScanConfocal"/>
						<xsd:enumeration value="MultiPhotonMicroscopy"/><!-- laser scanning multiphoton microscopy (LSMM), two photon microscopy -->
						<xsd:enumeration value="StructuredIllumination"/>
						<xsd:enumeration value="SingleMoleculeImaging"/>
						<xsd:enumeration value="TotalInternalReflection"/>
						<xsd:enumeration value="FluorescenceLifetime"/>
						<xsd:enumeration value="SpectralImaging"/>
						<xsd:enumeration value="FluorescenceCorrelationSpectroscopy"/>
						<xsd:enumeration value="NearFieldScanningOpticalMicroscopy"/><!-- NSOM -->
						<xsd:enumeration value="SecondHarmonicGenerationImaging"/><!-- Second harmonic imaging microscopy (SHIM) -->
						<xsd:enumeration value="PALM"/><!-- photo-activated localization microscopy, photo-activation localization microscopy -->
						<xsd:enumeration value="STORM"/><!-- stochastic optical reconstruction microscopy -->
						<xsd:enumeration value="STED"/><!-- stimulated emission depletion -->
						<xsd:enumeration value="TIRF"/><!-- total internal reflection fluorescence (TIRFM) -->
						<xsd:enumeration value="FSM"/><!-- Fluorescence speckle microscopy -->
						<xsd:enumeration value="LCM"/><!-- Laser capture microdissection -->
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ContrastMethod" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						ContrastMethod describes the technique used to achieve contrast for each channel
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Brightfield"/>
						<xsd:enumeration value="Phase"/>
						<xsd:enumeration value="DIC"/><!-- Differential Interference Contrast -->
						<xsd:enumeration value="HoffmanModulation"/><!-- Hoffman Modulation Contrast (HMC) -->
						<xsd:enumeration value="ObliqueIllumination"/>
						<xsd:enumeration value="PolarizedLight"/> <!-- Polarization Microscopy -->
						<xsd:enumeration value="Darkfield"/><!-- Dark Field Imaging -->
						<xsd:enumeration value="Fluorescence"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ExcitationWavelength" use="optional" type="PositiveFloat">
				<xsd:annotation>
					<xsd:documentation>
						Wavelength of excitation for a particular channel. Units are set by ExcitationWavelengthUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ExcitationWavelengthUnit" use="optional" default="nm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the wavelength of excitation - default:nanometres[nm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="EmissionWavelength" use="optional" type="PositiveFloat">
				<xsd:annotation>
					<xsd:documentation>
						Wavelength of emission for a particular channel. Units are set by EmissionWavelengthUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="EmissionWavelengthUnit" use="optional" default="nm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the wavelength of emission - default:nanometres[nm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Fluor" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The Fluor attribute is used for fluorescence images.
						This is the name of the fluorophore used to produce this channel [plain text string]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="NDFilter" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The NDfilter attribute is used to specify the combined effect of any neutral density filters used. [units optical density expressed as a PercentFraction]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PockelCellSetting" use="optional" type="xsd:int">
				<xsd:annotation>
					<xsd:documentation>
						The PockelCellSetting used for this channel. This is the amount the polarization of the beam is rotated by. [units:none]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Color" use="optional" type="Color" default="-1">
				<xsd:annotation>
					<xsd:documentation>
						A color used to render this channel - encoded as RGBA
						The default value "-1" is #FFFFFFFF so solid white (it is a signed 32 bit value)
						NOTE: Prior to the 2012-06 schema the default value was incorrect and produced a transparent red not solid white.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<!-- Other elements associated with pixel storage -->
	<xsd:element name="MetadataOnly"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>MetadataOnlyMarkers</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This place holder means there is on pixel data in this file.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TiffData"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>TiffDataBlocks</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This described the location of the pixel data in a tiff file.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="UUID" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							This must be used when the IFDs are located in another file.
							Note: It is permissible for this to be self referential.
						</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base = "UniversallyUniqueIdentifier">
								<xsd:attribute name="FileName" use="optional" type="xsd:string">
									<xsd:annotation>
										<xsd:documentation>
											This can be used when the IFDs are located in another file.
											The / (forward slash) is used as the path separator.
											A relative path is recommended. However an absolute path can be specified.
											Default is to use the file the ome-xml data has been pulled from.
											Note: It is permissible for this to be self referential. The file image1.tiff
											may contain ome-xml data that has FilePath="image1.tiff" or "./image1.tiff"
										</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="IFD" type="NonNegativeInt" default="0" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						Gives the IFD(s) for which this element is applicable. Indexed from 0.
						Default is 0 (the first IFD). [units:none]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FirstZ" type="NonNegativeInt" default="0" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						Gives the Z position of the image plane at the specified IFD. Indexed from 0.
						Default is 0 (the first Z position). [units:none]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FirstT" type="NonNegativeInt" default="0" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						Gives the T position of the image plane at the specified IFD. Indexed from 0.
						Default is 0 (the first T position). [units:none]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FirstC" type="NonNegativeInt" default="0" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						Gives the C position of the image plane at the specified IFD. Indexed from 0.
						Default is 0 (the first C position). [units:none]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PlaneCount" use="optional" type="NonNegativeInt">
				<xsd:annotation>
					<xsd:documentation>
						Gives the number of IFDs affected. Dimension order of IFDs is given by the enclosing
						Pixels element's DimensionOrder attribute. Default is the number of IFDs in the TIFF
						file, unless an IFD is specified, in which case the default is 1. [units:none]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="StageLabel"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>StageLabels</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The StageLabel is used to specify a name and position for a stage position in the microscope's reference frame.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Name" use="required" type="xsd:string"/>
			<xsd:attribute name="X" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The X position of the stage label. Units are set by XUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="XUnit" use="optional" default="reference frame" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the X stage position - default:[reference frame].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Y" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The Y position of the stage label. Units are set by YUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="YUnit" use="optional" default="reference frame" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the Y stage position - default:[reference frame].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Z" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The Z position of the stage label. Units are set by ZUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ZUnit" use="optional" default="reference frame" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the Z  stage position - default:[reference frame].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<!-- Misc -->
	<xsd:element name="MicrobeamManipulation"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>MicrobeamManipulations</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				Defines a microbeam operation type and the region of the image it was applied to.
				The LightSourceRef element is a reference to a LightSource specified in the Instrument element which was used for a technique other than illumination for
				the purpose of imaging. For example, a laser used for photobleaching.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							A description for the Microbeam Manipulation. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="ROI:ROIRef" minOccurs="1" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ExperimenterRef" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="LightSourceSettings" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="MicrobeamManipulationID"/>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The type of manipulation performed.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:list>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="FRAP"/><!-- Fluorescence recovery after photobleaching -->
								<xsd:enumeration value="FLIP"/><!-- Fluorescence Loss in Photobleaching -->
								<xsd:enumeration value="InverseFRAP"/><!-- iFRAP, inverse FRAP -->
								<xsd:enumeration value="Photoablation"/>
								<xsd:enumeration value="Photoactivation"/>
								<xsd:enumeration value="Uncaging"/>
								<xsd:enumeration value="OpticalTrapping"/>
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:list>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<!-- Physical microscope elements -->
	<xsd:element name="Instrument"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Instruments</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This element describes the instrument used to capture the Image.
				It is primarily a container for manufacturer's model and catalog
				numbers for the Microscope, LightSource, Detector, Objective and
				Filters components.
				The Objective element contains the additional elements LensNA and Magnification.
				The Filters element can be composed either of separate excitation,
				emission filters and a dichroic mirror or a single filter set.
				Within the Image itself, a reference is made to this one Filter element.
				There may be multiple light sources, detectors, objectives and filters on a microscope.
				Each of these has their own ID attribute, which can be referred to from Channel.
				It is understood that the light path configuration can be different
				for each channel, but cannot be different for each timepoint or
				each plane of an XYZ stack.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Microscope" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="LightSource" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Detector" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Objective" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="FilterSet" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Filter" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Dichroic" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="InstrumentID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Microscope"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Microscopes</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>The microscope's manufacturer specification.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="ManufacturerSpec">
					<xsd:attribute name="Type" use="optional">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Upright"/>
								<xsd:enumeration value="Inverted"/>
								<xsd:enumeration value="Dissection"/>
								<xsd:enumeration value="Electrophysiology"/>
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<!-- Image sample elements -->
	<xsd:element name="ImagingEnvironment"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ImagingEnvironments</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This describes the environment that the biological sample was in
				during the experiment.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Map" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:attribute name="Temperature" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The Temperature is the define units.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TemperatureUnit" use="optional" default="°C" type="UnitsTemperature">
				<xsd:annotation>
					<xsd:documentation>
						The units the Temperature is in - default:Celsius[°C].
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="AirPressure" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						AirPressure is the define units.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="AirPressureUnit" use="optional" default="mbar" type="UnitsPressure">
				<xsd:annotation>
					<xsd:documentation>
						The units the AirPressure is in - default:millibars[mbar].
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Humidity" use="optional" type="PercentFraction">
				<xsd:annotation>
					<xsd:documentation>
						Humidity around the sample [units:none]
						A fraction, as a value from 0.0 to 1.0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CO2Percent" use="optional" type="PercentFraction">
				<xsd:annotation>
					<xsd:documentation>
						Carbon Dioxide concentration around the sample [units:none]
						A fraction, as a value from 0.0 to 1.0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<!-- Structure elements -->
	<xsd:element name="Project"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Projects</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The Project ID is required.
				Datasets can be grouped into projects using a many-to-many relationship.
				A Dataset may belong to one or more Projects by including one or more ProjectRef elements which refer to Project IDs.
				Projects do not directly contain images - only by virtue of containing datasets, which themselves contain images.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							A description for the project. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="ExperimenterRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="ExperimenterGroupRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="DatasetRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="optional" type="xsd:string"/>
			<xsd:attribute name="ID" use="required" type="ProjectID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ExperimenterGroup"> <!-- top level definition -->
		<xsd:annotation>
            <xsd:appinfo><xsdfu><plural>ExperimenterGroups</plural><global/></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The ExperimenterGroupID is required.
				Information should ideally be specified for at least one Leader as a contact for the group.
				The Leaders are themselves Experimenters.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							A description for the group. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="ExperimenterRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
                        <xsd:appinfo><xsdfu><manytomany/><childordered/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Leader" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="optional" type="xsd:string">
				<xsd:annotation>
                    <xsd:appinfo><xsdfu><unique/></xsdfu></xsd:appinfo>
				</xsd:annotation>
            </xsd:attribute>
			<xsd:attribute name="ID" use="required" type="ExperimenterGroupID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Leader"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Leaders</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				Contact information for a ExperimenterGroup leader specified using a reference
				to an Experimenter element defined elsewhere in the document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="ExperimenterID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Dataset"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Datasets</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				An element specifying a collection of images that are always processed together.
				Images can belong to more than one Dataset, and a Dataset may contain more than one Image.
				Images contain one or more DatasetRef elements to specify what datasets they belong to.
				Once a Dataset has been processed in any way, its collection of images cannot be altered.
				The ExperimenterRef and ExperimenterGroupRef elements specify the person and group this Dataset belongs to.
				Projects may contain one or more Datasets, and Datasets may belong to one or more Projects.
				This relationship is specified by listing DatasetRef elements within the Project element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							A description for the dataset. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="ExperimenterRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="ExperimenterGroupRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="ImageRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A name for the dataset that is suitable be presented to the user.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ID" use="required" type="DatasetID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Experiment"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Experiments</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This element describes the type of experiment.  The required Type attribute must contain one or more entries from the following list:
				FP FRET Time-lapse 4-D+ Screen Immunocytochemistry FISH Electrophysiology  Ion-Imaging Colocalization PGI/Documentation
				FRAP Photoablation Optical-Trapping Photoactivation Fluorescence-Lifetime Spectral-Imaging Other
				FP refers to fluorescent proteins, PGI/Documentation is not a 'data' image.
				The optional Description element may contain free text to further describe the experiment.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							A description for the experiment. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="ExperimenterRef" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							This is a link to the Experimenter who conducted the experiment
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="MicrobeamManipulation" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						A term to describe the type of experiment.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:list>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="FP"/>
								<xsd:enumeration value="FRET"/><!-- Förster resonance energy transfer, also known as fluorescence resonance energy transfer, resonance energy transfer (RET) or electronic energy transfer (EET) -->
								<xsd:enumeration value="TimeLapse"/><!--  Time-lapse microscopy (microphotography, photomicrography) -->
								<xsd:enumeration value="FourDPlus"/>
								<xsd:enumeration value="Screen"/>
								<xsd:enumeration value="Immunocytochemistry"/>
								<xsd:enumeration value="Immunofluorescence"/>
								<xsd:enumeration value="FISH"/><!-- Fluorescent in situ hybridization -->
								<xsd:enumeration value="Electrophysiology"/>
								<xsd:enumeration value="IonImaging"/>
								<xsd:enumeration value="Colocalization"/>
								<xsd:enumeration value="PGIDocumentation"/>
								<xsd:enumeration value="FluorescenceLifetime"/><!-- Fluorescence lifetime imaging (FLIM) -->
								<xsd:enumeration value="SpectralImaging"/>
								<xsd:enumeration value="Photobleaching"/>
								<xsd:enumeration value="SPIM"/><!-- Selective or Single Plane Illumination Microscopy -->
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:list>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ID" use="required" type="ExperimentID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Experimenter"> <!-- top level definition -->
		<xsd:annotation>
            <xsd:appinfo><xsdfu><plural>Experimenters</plural><global/></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This element describes a person who performed an imaging experiment.
				This person may also be a user of the OME system, in which case the UserName element contains their login name.
				Experimenters may belong to one or more groups which are specified using one or more ExperimenterGroupRef elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="ID" use="required" type="ExperimenterID"/>
			<xsd:attribute name="FirstName" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>First name, sometime called christian name or given name or forename. [plain text string]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="MiddleName" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Any other names. [plain text string]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="LastName" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>A person's last name sometimes called surname or family name. [plain text string]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Email" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>A person's email address. [valid email address as string]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Institution" use="optional" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A person's Institution
						The organizing structure that people belong to other than groups.  A university, or company, etc.
						We do not specify a department element, and do not mean for Institution to be used in this way.
						We simply wish to say XXX at YYY.  Where YYY has a better chance of being tied to a geographically fixed location
						and of being more recognizable than a group of experimenters. [plain text string]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="UserName" use="optional" type="xsd:string">
				<xsd:annotation>
                    <xsd:appinfo><xsdfu><unique/></xsdfu></xsd:appinfo>
					<xsd:documentation>This is the username of the experimenter (in a 'unix' or 'database' sense). [plain text string]</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<!-- Common types -->
	<xsd:complexType name="ManufacturerSpec">
		<xsd:annotation>
			<xsd:appinfo><xsdfu><abstract/></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This is the base from which many microscope components are extended. E.g Objective, Filter etc.
				Provides attributes for recording common properties of these components such as Manufacturer name, Model etc,
				all of which are optional.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="Manufacturer" use="optional" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					The manufacturer of the component. [plain text string]
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="Model" use="optional" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					The Model of the component. [plain text string]
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="SerialNumber" use="optional" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					The serial number of the component. [plain text string]
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LotNumber" use="optional" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					The lot number of the component. [plain text string]
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:simpleType name="Hex40">
		<xsd:annotation>
			<xsd:documentation>
				Binary contents coded in hexadecimal (20 characters long)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:hexBinary">
			<xsd:length value="20"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NonNegativeFloat">
		<xsd:annotation>
			<xsd:documentation>
				A simple type that restricts the value to a float between >=0 and max 32-bit float {i.e. (2−2^-23) × 2^27 ≈ 3.4 × 10^38}
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:long">
			<xsd:minInclusive value="0"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NonNegativeLong">
		<xsd:annotation>
			<xsd:documentation>
				A simple type that restricts the value to a long between 0 and 9223372036854775807 (inclusive).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:long">
			<xsd:minInclusive value="0"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NonNegativeInt">
		<xsd:annotation>
			<xsd:documentation>
				A simple type that restricts the value to an integer between 0 and 2,147,483,647 (inclusive).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:minInclusive value="0"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PositiveInt">
		<xsd:annotation>
			<xsd:documentation>
				A simple type that restricts the value to an integer between 1 and 2,147,483,647 (inclusive).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:minInclusive value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PositiveFloat">
		<xsd:annotation>
			<xsd:documentation>
				A simple type that restricts the value to a float between >0 and max 32-bit float {i.e. (2−2^-23) × 2^27 ≈ 3.4 × 10^38}
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:float">
			<xsd:minExclusive value="0.0"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PercentFraction">
		<xsd:annotation>
			<xsd:documentation>
				A simple type that restricts the value to a float between 0 and 1 (inclusive).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:float">
			<xsd:maxInclusive value="1.0"/>
			<xsd:minInclusive value="0.0"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniversallyUniqueIdentifier">
		<xsd:annotation>
			<xsd:documentation>
				This is a unique ID for the file but does not conform to the ID pattern used in the rest of the file.
				The rest of the IDs are either an full LSID or an internal ID which is a string that is simply unique in this file.
				As the UniversallyUniqueIdentifier is used from outside this file to identify it having the same ID in another file could cause problems.
				A UUID is 32 hexadecimal digits, in 5 groups, 8-4-4-4-12, separated by hyphens
				e.g. urn:uuid:3e450fae-b8f2-4d35-aa54-702168b2487f
				There are methods to generate these in most modern languages.
				http://www.ietf.org/rfc/rfc4122.txt
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:anyURI">
			<xsd:pattern value="(urn:uuid:[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:element name="Map">
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Maps</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This is a Mapping of key/value pairs.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="OME:MapPairs"/>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="MapPairs">
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>MapPairsCollection</plural></xsdfu></xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="1" maxOccurs="1">
			<xsd:element name="M" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:appinfo><xsdfu><plural>Ms</plural></xsdfu></xsd:appinfo>
					<xsd:documentation> This is a key/value pair used to build up a Mapping. The
						Element and Attribute name are kept to single letters to minimize the
						length at the expense of readability as they are likely to occur many
						times. </xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="K" type="xsd:string"/>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="PixelType">
		<xsd:annotation>
			<xsd:documentation>
				The number size/kind used to represent a pixel
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value = "int8"/>
			<xsd:enumeration value = "int16"/>
			<xsd:enumeration value = "int32"/>
			<xsd:enumeration value = "uint8"/>
			<xsd:enumeration value = "uint16"/>
			<xsd:enumeration value = "uint32"/>
			<xsd:enumeration value = "float"/>
			<xsd:enumeration value = "bit"/>
			<xsd:enumeration value = "double"/>
			<xsd:enumeration value = "complex"/>
			<xsd:enumeration value = "double-complex"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Color">
		<xsd:annotation>
			<xsd:documentation>
				A simple type that identifies itself as a Color, the value is an integer between -2,147,483,648 and 2,147,483,647 (inclusive).
				The value is a signed 32 bit encoding of RGBA so "-1" is #FFFFFFFF or solid white.
				NOTE: Prior to the 2012-06 schema the default values were incorrect and produced a transparent red not solid white.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UnitsLength">
		<xsd:annotation>
			<xsd:documentation>
				The units used to represent a length
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value =  "Ym"><xsd:annotation><xsd:documentation>The length unit is yotta meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Zm"><xsd:annotation><xsd:documentation>The length unit is zetta meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Em"><xsd:annotation><xsd:documentation>The length unit is   exa meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Pm"><xsd:annotation><xsd:documentation>The length unit is  peta meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Tm"><xsd:annotation><xsd:documentation>The length unit is  tera meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Gm"><xsd:annotation><xsd:documentation>The length unit is  giga meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Mm"><xsd:annotation><xsd:documentation>The length unit is  mega meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "km"><xsd:annotation><xsd:documentation>The length unit is  kilo meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "hm"><xsd:annotation><xsd:documentation>The length unit is hecto meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "dam"><xsd:annotation><xsd:documentation>The length unit is  deca meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "m"><xsd:annotation><xsd:documentation>The length unit is       meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "dm"><xsd:annotation><xsd:documentation>The length unit is  deci meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "cm"><xsd:annotation><xsd:documentation>The length unit is centi meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "mm"><xsd:annotation><xsd:documentation>The length unit is milli meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "µm"><xsd:annotation><xsd:documentation>The length unit is micro meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "nm"><xsd:annotation><xsd:documentation>The length unit is  nano meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "pm"><xsd:annotation><xsd:documentation>The length unit is  pico meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "fm"><xsd:annotation><xsd:documentation>The length unit is femto meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "am"><xsd:annotation><xsd:documentation>The length unit is  atto meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "zm"><xsd:annotation><xsd:documentation>The length unit is zepto meters.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ym"><xsd:annotation><xsd:documentation>The length unit is yocto meters.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value = "Å"><xsd:annotation><xsd:documentation>The length unit is    ångströms.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value = "thou"><xsd:annotation><xsd:documentation>The length unit is thou (or mil, 1/1000 of an inch).</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "li"><xsd:annotation><xsd:documentation>The length unit is line (1/12 of an inch).</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "in"><xsd:annotation><xsd:documentation>The length unit is inch.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "ft"><xsd:annotation><xsd:documentation>The length unit is foot.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "yd"><xsd:annotation><xsd:documentation>The length unit is yard.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "mi"><xsd:annotation><xsd:documentation>The length unit is terrestrial mile.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value = "ua"><xsd:annotation><xsd:documentation>The length unit is astronomical unit. The official term is ua as the SI standard assigned AU to absorbance unit.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "ly"><xsd:annotation><xsd:documentation>The length unit is light year.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "pc"><xsd:annotation><xsd:documentation>The length unit is parsec.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value = "pt"><xsd:annotation><xsd:documentation>The length unit is typography point. This unit should be limited to font sizes.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "pixel"><xsd:annotation><xsd:documentation>The length unit is pixel. This unit should be limited to the ROI objects. It can then be resolved to real units from the PhysicalSize units of the Image the ROI is attached to.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value = "reference frame"><xsd:annotation><xsd:documentation>The length unit is reference frame.</xsd:documentation></xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UnitsTime">
		<xsd:annotation>
			<xsd:documentation>
				The units used to represent a time interval
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value =  "Ys"><xsd:annotation><xsd:documentation>The time unit is yotta seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Zs"><xsd:annotation><xsd:documentation>The time unit is zetta seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Es"><xsd:annotation><xsd:documentation>The time unit is   exa seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Ps"><xsd:annotation><xsd:documentation>The time unit is  peta seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Ts"><xsd:annotation><xsd:documentation>The time unit is  tera seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Gs"><xsd:annotation><xsd:documentation>The time unit is  giga seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "Ms"><xsd:annotation><xsd:documentation>The time unit is  mega seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ks"><xsd:annotation><xsd:documentation>The time unit is  kilo seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "hs"><xsd:annotation><xsd:documentation>The time unit is hecto seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "das"><xsd:annotation><xsd:documentation>The time unit is  deca seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "s"><xsd:annotation><xsd:documentation>The time unit is       seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ds"><xsd:annotation><xsd:documentation>The time unit is  deci seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "cs"><xsd:annotation><xsd:documentation>The time unit is centi seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ms"><xsd:annotation><xsd:documentation>The time unit is milli seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "µs"><xsd:annotation><xsd:documentation>The time unit is micro seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ns"><xsd:annotation><xsd:documentation>The time unit is  nano seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ps"><xsd:annotation><xsd:documentation>The time unit is  pico seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "fs"><xsd:annotation><xsd:documentation>The time unit is femto seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "as"><xsd:annotation><xsd:documentation>The time unit is  atto seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "zs"><xsd:annotation><xsd:documentation>The time unit is zepto seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ys"><xsd:annotation><xsd:documentation>The time unit is yocto seconds.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value = "min"><xsd:annotation><xsd:documentation>The time unit is       minutes.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "h"><xsd:annotation><xsd:documentation>The time unit is         hours.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "d"><xsd:annotation><xsd:documentation>The time unit is          days.</xsd:documentation></xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UnitsPressure">
		<xsd:annotation>
			<xsd:documentation>
				The units used to represent a pressure
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value =  "YPa"><xsd:annotation><xsd:documentation>The pressure unit is yotta pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ZPa"><xsd:annotation><xsd:documentation>The pressure unit is zetta pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "EPa"><xsd:annotation><xsd:documentation>The pressure unit is   exa pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "PPa"><xsd:annotation><xsd:documentation>The pressure unit is  peta pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "TPa"><xsd:annotation><xsd:documentation>The pressure unit is  tera pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "GPa"><xsd:annotation><xsd:documentation>The pressure unit is  giga pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "MPa"><xsd:annotation><xsd:documentation>The pressure unit is  mega pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "kPa"><xsd:annotation><xsd:documentation>The pressure unit is  kilo pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "hPa"><xsd:annotation><xsd:documentation>The pressure unit is hecto pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "daPa"><xsd:annotation><xsd:documentation>The pressure unit is  deca pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "Pa"><xsd:annotation><xsd:documentation>The pressure unit is       pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "dPa"><xsd:annotation><xsd:documentation>The pressure unit is  deci pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "cPa"><xsd:annotation><xsd:documentation>The pressure unit is centi pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "mPa"><xsd:annotation><xsd:documentation>The pressure unit is milli pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "µPa"><xsd:annotation><xsd:documentation>The pressure unit is micro pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "nPa"><xsd:annotation><xsd:documentation>The pressure unit is  nano pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "pPa"><xsd:annotation><xsd:documentation>The pressure unit is  pico pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "fPa"><xsd:annotation><xsd:documentation>The pressure unit is femto pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "aPa"><xsd:annotation><xsd:documentation>The pressure unit is  atto pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "zPa"><xsd:annotation><xsd:documentation>The pressure unit is zepto pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "yPa"><xsd:annotation><xsd:documentation>The pressure unit is yocto pascal.</xsd:documentation></xsd:annotation></xsd:enumeration>
<!-- Add bar? -->
			<xsd:enumeration value =  "Mbar"><xsd:annotation><xsd:documentation>The pressure unit is  mega bar.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "kbar"><xsd:annotation><xsd:documentation>The pressure unit is  kilo bar.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "dbar"><xsd:annotation><xsd:documentation>The pressure unit is  deci bar.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "cbar"><xsd:annotation><xsd:documentation>The pressure unit is centi bar.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "mbar"><xsd:annotation><xsd:documentation>The pressure unit is milli bar.</xsd:documentation><xsd:appinfo><enumName>MILLIBAR</enumName></xsd:appinfo></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value =  "atm"><xsd:annotation><xsd:documentation>The pressure unit is standard atmosphere.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value =  "psi"><xsd:annotation><xsd:documentation>The pressure unit is pounds per square inch.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value =  "Torr"><xsd:annotation><xsd:documentation>The pressure unit is       torr.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "mTorr"><xsd:annotation><xsd:documentation>The pressure unit is milli torr.</xsd:documentation></xsd:annotation></xsd:enumeration>

			<xsd:enumeration value = "mm Hg"><xsd:annotation><xsd:documentation>The pressure unit is millimetre of mercury.</xsd:documentation></xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UnitsAngle">
		<xsd:annotation>
			<xsd:documentation>
				The units used to represent an angle
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value = "deg"><xsd:annotation><xsd:documentation>The angle unit is degree.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "rad"><xsd:annotation><xsd:documentation>The angle unit is radian.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "gon"><xsd:annotation><xsd:documentation>The angle unit is gradian.</xsd:documentation></xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UnitsTemperature">
		<xsd:annotation>
			<xsd:documentation>
				The units used to represent a temperature
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value =   "°C"><xsd:annotation><xsd:documentation>The temperature unit is degree Centigrade.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "°F"><xsd:annotation><xsd:documentation>The temperature unit is degree Fahrenheit.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =    "K"><xsd:annotation><xsd:documentation>The temperature unit is        Kelvin.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "°R"><xsd:annotation><xsd:documentation>The temperature unit is degree Rankine.</xsd:documentation></xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UnitsElectricPotential">
		<xsd:annotation>
			<xsd:documentation>
				The units used to represent an electric potential
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value =  "YV"><xsd:annotation><xsd:documentation>The voltage unit is yotta volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ZV"><xsd:annotation><xsd:documentation>The voltage unit is zetta volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "EV"><xsd:annotation><xsd:documentation>The voltage unit is   exa volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "PV"><xsd:annotation><xsd:documentation>The voltage unit is  peta volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "TV"><xsd:annotation><xsd:documentation>The voltage unit is  tera volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "GV"><xsd:annotation><xsd:documentation>The voltage unit is  giga volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "MV"><xsd:annotation><xsd:documentation>The voltage unit is  mega volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "kV"><xsd:annotation><xsd:documentation>The voltage unit is  kilo volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "hV"><xsd:annotation><xsd:documentation>The voltage unit is hecto volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "daV"><xsd:annotation><xsd:documentation>The voltage unit is  deca volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "V"><xsd:annotation><xsd:documentation>The voltage unit is       volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "dV"><xsd:annotation><xsd:documentation>The voltage unit is  deci volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "cV"><xsd:annotation><xsd:documentation>The voltage unit is centi volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "mV"><xsd:annotation><xsd:documentation>The voltage unit is milli volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "µV"><xsd:annotation><xsd:documentation>The voltage unit is micro volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "nV"><xsd:annotation><xsd:documentation>The voltage unit is  nano volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "pV"><xsd:annotation><xsd:documentation>The voltage unit is  pico volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "fV"><xsd:annotation><xsd:documentation>The voltage unit is femto volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "aV"><xsd:annotation><xsd:documentation>The voltage unit is  atto volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "zV"><xsd:annotation><xsd:documentation>The voltage unit is zepto volts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "yV"><xsd:annotation><xsd:documentation>The voltage unit is yocto volts.</xsd:documentation></xsd:annotation></xsd:enumeration>

		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UnitsPower">
		<xsd:annotation>
			<xsd:documentation>
				The units used to represent power
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value =  "YW"><xsd:annotation><xsd:documentation>The power unit is yotta watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ZW"><xsd:annotation><xsd:documentation>The power unit is zetta watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "EW"><xsd:annotation><xsd:documentation>The power unit is   exa watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "PW"><xsd:annotation><xsd:documentation>The power unit is  peta watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "TW"><xsd:annotation><xsd:documentation>The power unit is  tera watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "GW"><xsd:annotation><xsd:documentation>The power unit is  giga watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "MW"><xsd:annotation><xsd:documentation>The power unit is  mega watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "kW"><xsd:annotation><xsd:documentation>The power unit is  kilo watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "hW"><xsd:annotation><xsd:documentation>The power unit is hecto watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "daW"><xsd:annotation><xsd:documentation>The power unit is  deca watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "W"><xsd:annotation><xsd:documentation>The power unit is       watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "dW"><xsd:annotation><xsd:documentation>The power unit is  deci watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "cW"><xsd:annotation><xsd:documentation>The power unit is centi watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "mW"><xsd:annotation><xsd:documentation>The power unit is milli watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "µW"><xsd:annotation><xsd:documentation>The power unit is micro watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "nW"><xsd:annotation><xsd:documentation>The power unit is  nano watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "pW"><xsd:annotation><xsd:documentation>The power unit is  pico watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "fW"><xsd:annotation><xsd:documentation>The power unit is femto watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "aW"><xsd:annotation><xsd:documentation>The power unit is  atto watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "zW"><xsd:annotation><xsd:documentation>The power unit is zepto watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "yW"><xsd:annotation><xsd:documentation>The power unit is yocto watts.</xsd:documentation></xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="UnitsFrequency">
		<xsd:annotation>
			<xsd:documentation>
				The units used to represent frequency
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value =  "YHz"><xsd:annotation><xsd:documentation>The frequency unit is yotta hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "ZHz"><xsd:annotation><xsd:documentation>The frequency unit is zetta hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "EHz"><xsd:annotation><xsd:documentation>The frequency unit is   exa hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "PHz"><xsd:annotation><xsd:documentation>The frequency unit is  peta hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "THz"><xsd:annotation><xsd:documentation>The frequency unit is  tera hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "GHz"><xsd:annotation><xsd:documentation>The frequency unit is  giga hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "MHz"><xsd:annotation><xsd:documentation>The frequency unit is  mega hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "kHz"><xsd:annotation><xsd:documentation>The frequency unit is  kilo hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "hHz"><xsd:annotation><xsd:documentation>The frequency unit is hecto hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value = "daHz"><xsd:annotation><xsd:documentation>The frequency unit is  deca hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =   "Hz"><xsd:annotation><xsd:documentation>The frequency unit is       hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "dHz"><xsd:annotation><xsd:documentation>The frequency unit is  deci hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "cHz"><xsd:annotation><xsd:documentation>The frequency unit is centi hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "mHz"><xsd:annotation><xsd:documentation>The frequency unit is milli hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "µHz"><xsd:annotation><xsd:documentation>The frequency unit is micro hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "nHz"><xsd:annotation><xsd:documentation>The frequency unit is  nano hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "pHz"><xsd:annotation><xsd:documentation>The frequency unit is  pico hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "fHz"><xsd:annotation><xsd:documentation>The frequency unit is femto hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "aHz"><xsd:annotation><xsd:documentation>The frequency unit is  atto hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "zHz"><xsd:annotation><xsd:documentation>The frequency unit is zepto hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
			<xsd:enumeration value =  "yHz"><xsd:annotation><xsd:documentation>The frequency unit is yocto hertz.</xsd:documentation></xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- Objective elements -->
	<xsd:element name="Objective"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Objectives</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				A description of the microscope's objective lens.
				Required elements include the lens numerical aperture,
				and the magnification, both of which a floating
				point (real) numbers.
				The values are those that are fixed for a particular
				objective: either because it has been manufactured to
				this specification or the value has been measured on
				this particular objective.
				Correction: This is the type of correction coating applied to this lens.
				Immersion: This is the types of immersion medium the lens is designed to
				work with. It is not the same as 'Medium' in ObjectiveRef (a
				single type) as here Immersion can have compound values like 'Multi'.
				LensNA: The numerical aperture of the lens (as a float)
				NominalMagnification: The specified magnification e.g. x10
				CalibratedMagnification: The measured magnification e.g. x10.3
				WorkingDistance: WorkingDistance of the lens.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="ManufacturerSpec">
					<xsd:sequence>
						<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" use="required" type="ObjectiveID"/>
					<xsd:attribute name="Correction" use="optional">
						<xsd:annotation>
							<xsd:documentation>The correction applied to the lens</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="UV"/>
								<xsd:enumeration value="PlanApo"/>
								<xsd:enumeration value="PlanFluor"/>
								<xsd:enumeration value="SuperFluor"/>
								<xsd:enumeration value="VioletCorrected"/>
								<xsd:enumeration value="Achro"/>
								<xsd:enumeration value="Achromat"/>
								<xsd:enumeration value="Fluor"/>
								<xsd:enumeration value="Fl"/>
								<xsd:enumeration value="Fluar"/>
								<xsd:enumeration value="Neofluar"/>
								<xsd:enumeration value="Fluotar"/>
								<xsd:enumeration value="Apo"/>
								<xsd:enumeration value="PlanNeofluar"/>
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Immersion" use="optional">
						<xsd:annotation>
							<xsd:documentation>The immersion medium the lens is designed for</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Oil"/>
								<xsd:enumeration value="Water"/>
								<xsd:enumeration value="WaterDipping"/>
								<xsd:enumeration value="Air"/>
								<xsd:enumeration value="Multi"/>
								<xsd:enumeration value="Glycerol"/>
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="LensNA" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The numerical aperture of the lens expressed as a floating point (real) number.
								Expected range 0.02 - 1.5 [units:none]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="NominalMagnification" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The magnification of the lens as specified by the manufacturer - i.e. '60' is a 60X lens. [units:none]
								Note: The type of this has been changed from int to float to allow
								the specification of additional lenses e.g. 0.5X lens
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="CalibratedMagnification" use="optional"  type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The magnification of the lens as measured by a calibration process- i.e. '59.987' for a 60X lens. [units:none]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="WorkingDistance" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The working distance of the lens expressed as a floating point (real) number. Units are set by WorkingDistanceUnit.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="WorkingDistanceUnit" use="optional" default="µm" type="UnitsLength">
						<xsd:annotation>
							<xsd:documentation>The units of the working distance - default:microns[µm].</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Iris" use="optional" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>
								Records whether or not the objective was fitted with an Iris. [flag]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Detector"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Detectors</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The type of detector used to capture the image.
				The Detector ID can be used as a reference within the Channel element in the Image element.
				The values stored in Detector represent the fixed values,
				variable values modified during the acquisition go in DetectorSettings

				Each attribute now has an indication of what type of detector
				it applies to. This is preparatory work for cleaning up and
				possibly splitting this object into sub-types.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="ManufacturerSpec">
					<xsd:sequence>
						<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="Gain" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Detector Gain for this detector, as a float. [units:none] {used:CCD,EMCCD,PMT}
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Voltage" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Voltage of the detector (e.g. PMT voltage) as a float. {used:PMT}
								Units are set by VoltageUnit.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="VoltageUnit" use="optional" default="V" type="UnitsElectricPotential">
						<xsd:annotation>
							<xsd:documentation>The units of the Voltage - default:volts[V].</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Offset" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Detector Offset. [units:none] {used:CCD,EMCCD}
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Zoom" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The fixed Zoom for a detector. [units:none] {used:PMT}
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="AmplificationGain" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								Gain applied to the detector signal.
								This is the electronic gain (as apposed to the inherent gain) that is set for the detector. [units:none] {used:EMCCD#EMGain}
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="ID" use="required" type="DetectorID"/>
					<xsd:attribute name="Type" use="optional">
						<xsd:annotation>
							<xsd:documentation>
								The Type of detector. E.g. CCD, PMT, EMCCD etc.
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="CCD"/><!-- Charge-Coupled Device -->
								<xsd:enumeration value="IntensifiedCCD"/>
								<xsd:enumeration value="AnalogVideo"/>
								<xsd:enumeration value="PMT"/><!-- Photomultiplier tube -->
								<xsd:enumeration value="Photodiode"/>
								<xsd:enumeration value="Spectroscopy"/>
								<xsd:enumeration value="LifetimeImaging"/>
								<xsd:enumeration value="CorrelationSpectroscopy"/>
								<xsd:enumeration value="FTIR"/><!-- Fourier transform infrared spectroscopy -->
								<xsd:enumeration value="EMCCD"/><!-- Electron Multiplying Charge Coupled Device -->
								<xsd:enumeration value="APD"/><!-- Avalanche Photodiode -->
								<xsd:enumeration value="CMOS"/><!-- complementary metal oxide semiconductor -->
								<xsd:enumeration value="EBCCD"/><!-- electron-bombarded charge-coupled device -->
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<!-- Filter elements -->
	<xsd:element name="FilterSet"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>FilterSets</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Filter set manufacturer specification</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="ManufacturerSpec">
					<xsd:sequence>
						<xsd:element name="ExcitationFilterRef" type="FilterRef" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:appinfo><xsdfu><plural>ExcitationFilters</plural><manytomany/></xsdfu></xsd:appinfo>
								<xsd:documentation>
									The Filters placed in the Excitation light path.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element ref="DichroicRef" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="EmissionFilterRef" type="FilterRef" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:appinfo><xsdfu><plural>EmissionFilters</plural><manytomany/></xsdfu></xsd:appinfo>
								<xsd:documentation>
									The Filters placed in the Emission light path.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" use="required" type="FilterSetID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Filter"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Filters</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				A filter is either an excitation or emission filters.
				There should be one filter element specified per wavelength in the image.
				The channel number associated with a filter set is specified in Channel.
				It is based on the FilterSpec type, so has the required attributes Manufacturer, Model, and LotNumber.
				It may also contain a Type attribute which may be set to
				'LongPass', 'ShortPass', 'BandPass', 'MultiPass',
				'Dichroic', 'NeutralDensity', 'Tuneable' or 'Other'.
				It can be associated with an optional FilterWheel - Note: this is not the same as a FilterSet
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="ManufacturerSpec">
					<xsd:sequence>
						<xsd:element ref="TransmittanceRange" minOccurs="0" maxOccurs="1"/>
						<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="Type" use="optional">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Dichroic"/>
								<xsd:enumeration value="LongPass"/>
								<xsd:enumeration value="ShortPass"/>
								<xsd:enumeration value="BandPass"/>
								<xsd:enumeration value="MultiPass"/>
								<xsd:enumeration value="NeutralDensity"/>
								<xsd:enumeration value="Tuneable"/>
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="FilterWheel" use="optional" type="xsd:string" >
						<xsd:annotation>
							<xsd:documentation>
								A filter 'wheel' in OME can refer to any arrangement of filters in a filter holder of any shape. It could, for example, be a filter slider. [plain text string]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="ID" use="required" type="FilterID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TransmittanceRange"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>TransmittanceRanges</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This records the range of wavelengths that are transmitted by the filter. It also records the maximum amount of light transmitted.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="CutIn" use="optional" type="PositiveFloat" >
				<xsd:annotation>
					<xsd:documentation>
						CutIn is the wavelength below which there is less than 50% transmittance for a filter. Units are set by CutInUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CutInUnit" use="optional" default="nm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the CutIn - default:nanometres[nm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CutOut" use="optional" type="PositiveFloat" >
				<xsd:annotation>
					<xsd:documentation>
						CutOut is the wavelength above which there is less than 50% transmittance for a filter. Units are set by CutOutUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CutOutUnit" use="optional" default="nm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the CutOut - default:nanometres[nm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CutInTolerance" use="optional" type="NonNegativeFloat" >
				<xsd:annotation>
					<xsd:documentation>
						CutInTolerance. Units are set by CutInToleranceUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CutInToleranceUnit" use="optional" default="nm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the CutInTolerance - default:nanometres[nm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CutOutTolerance" use="optional" type="NonNegativeFloat" >
				<xsd:annotation>
					<xsd:documentation>
						CutOutTolerance. Units are set by CutOutToleranceUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CutOutToleranceUnit" use="optional" default="nm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the CutOutTolerance - default:nanometres[nm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Transmittance" use="optional" type="PercentFraction" >
				<xsd:annotation>
					<xsd:documentation>
						The amount of light the filter transmits at a maximum [units:none]
						A fraction, as a value from 0.0 to 1.0.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Dichroic"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Dichroics</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>The dichromatic beamsplitter or dichroic mirror used for this filter combination.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="ManufacturerSpec">
					<xsd:sequence>
						<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" use="required" type="DichroicID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LightPath"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>LightPaths</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>A description of the light path</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="ExcitationFilterRef" type="FilterRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
                        <xsd:appinfo><xsdfu><plural>ExcitationFilters</plural><parentordered/><manytomany/></xsdfu></xsd:appinfo>
						<xsd:documentation>
							The Filters placed in the Excitation light path.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="DichroicRef" minOccurs="0" maxOccurs="1"/>
				<xsd:element name="EmissionFilterRef" type="FilterRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><plural>EmissionFilters</plural><manytomany/></xsdfu></xsd:appinfo>
						<xsd:documentation>
							The Filters placed in the Emission light path.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DichroicRef">  <!-- top level definition -->
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="DichroicID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<!-- Light elements -->
	<xsd:element name="LightSource"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>LightSources</plural><abstractproprietary/></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The lightsource for the instrument.  An instrument may have several light sources.
				The type of lightsource is specified by one of the child-elements which are 'Laser', 'Filament', 'Arc' or 'LightEmittingDiode'.
				Each of the light source types has its own Type attribute to further differentiate the light source
				(eg, Nd-YAG for Laser or Hg for Arc).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="ManufacturerSpec">
					<xsd:sequence>
						<xsd:choice minOccurs="1" maxOccurs="1">
							<xsd:element ref="Laser" minOccurs="1" maxOccurs="1"/>
							<xsd:element ref="Filament" minOccurs="1" maxOccurs="1"/>
							<xsd:element ref="Arc" minOccurs="1" maxOccurs="1"/>
							<xsd:element ref="LightEmittingDiode" minOccurs="1" maxOccurs="1"/>
							<xsd:element ref="GenericExcitationSource" minOccurs="1" maxOccurs="1"/>
						</xsd:choice>
						<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" use="required" type="LightSourceID">
						<xsd:annotation>
							<xsd:documentation>
								A LightSource ID must be specified for each light source, and the individual
								light sources can be referred to by their LightSource IDs (eg from Channel).
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Power" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The light-source power. Units are set by PowerUnit.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="PowerUnit" use="optional" default="mW" type="UnitsPower">
						<xsd:annotation>
							<xsd:documentation>The units of the Power - default:milliwatts[mW].</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Laser"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Lasers</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				Laser types are specified using two attributes - the Type and the LaserMedium.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Pump" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							The Laser element may contain a Pump sub-element which refers to
							a LightSource used as a laser pump.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						Type is the general category of laser.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Excimer"/>
						<xsd:enumeration value="Gas"/>
						<xsd:enumeration value="MetalVapor"/>
						<xsd:enumeration value="SolidState"/>
						<xsd:enumeration value="Dye"/>
						<xsd:enumeration value="Semiconductor"/>
						<xsd:enumeration value="FreeElectron"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="LaserMedium" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The Medium attribute specifies the actual lasing medium
						for a given laser type.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<!-- MetalVaporLaserMedia -->
						<xsd:enumeration value="Cu"/>
						<xsd:enumeration value="Ag"/>
						<!-- ExcimerLaserMedia -->
						<xsd:enumeration value="ArFl"/>
						<xsd:enumeration value="ArCl"/>
						<xsd:enumeration value="KrFl"/>
						<xsd:enumeration value="KrCl"/>
						<xsd:enumeration value="XeFl"/>
						<xsd:enumeration value="XeCl"/>
						<xsd:enumeration value="XeBr"/>
						<!-- GasLaserMedia -->
						<xsd:enumeration value="N"/>
						<xsd:enumeration value="Ar"/>
						<xsd:enumeration value="Kr"/>
						<xsd:enumeration value="Xe"/>
						<xsd:enumeration value="HeNe"/>
						<xsd:enumeration value="HeCd"/>
						<xsd:enumeration value="CO"/>
						<xsd:enumeration value="CO2"/>
						<xsd:enumeration value="H2O"/>
						<xsd:enumeration value="HFl"/>
						<!-- SolidStateLaserMedia -->
						<xsd:enumeration value="NdGlass"/>
						<xsd:enumeration value="NdYAG"/>
						<xsd:enumeration value="ErGlass"/>
						<xsd:enumeration value="ErYAG"/>
						<xsd:enumeration value="HoYLF"/>
						<xsd:enumeration value="HoYAG"/>
						<xsd:enumeration value="Ruby"/>
						<xsd:enumeration value="TiSapphire"/>
						<xsd:enumeration value="Alexandrite"/>
						<!-- DyeLaserMedia -->
						<xsd:enumeration value="Rhodamine6G"/>
						<xsd:enumeration value="CoumarinC30"/>
						<!-- SemiconductorLaserMedia -->
						<xsd:enumeration value="GaAs"/>
						<xsd:enumeration value="GaAlAs"/>
						<!-- FreeElectronLaserMedia -->
						<xsd:enumeration value="EMinus"/>
						<!-- OtherLaserMedia -->
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Wavelength" use="optional" type="PositiveFloat">
				<xsd:annotation>
					<xsd:documentation>
						The Wavelength of the laser. Units are set by WavelengthUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="WavelengthUnit" use="optional" default="nm" type="UnitsLength">
				<xsd:annotation>
					<xsd:documentation>The units of the Wavelength - default:nanometres[nm].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FrequencyMultiplication" use="optional" type="PositiveInt">
				<xsd:annotation>
					<xsd:documentation>
						FrequencyMultiplication that may be specified. [units:none]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Tuneable" use="optional" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>
						Whether or not the laser is Tuneable [flag]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Pulse" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The Pulse mode of the laser.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="CW"/>
						<xsd:enumeration value="Single"/>
						<xsd:enumeration value="QSwitched"/>
						<xsd:enumeration value="Repetitive"/>
						<xsd:enumeration value="ModeLocked"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="PockelCell" use="optional" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>
						If true the laser has a PockelCell to rotate the polarization of the beam. [flag]
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="RepetitionRate" use="optional" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation>
						The is the rate in Hz at which the laser pulses if
						the Pulse type is 'Repetitive'. hertz[Hz]
						Units are set by RepetitionRateUnit.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="RepetitionRateUnit" use="optional" default="Hz" type="UnitsFrequency">
				<xsd:annotation>
					<xsd:documentation>The units of the RepetitionRate - default:hertz[Hz].</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Arc"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Arcs</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The Arc element is used to describe various kinds of Arc lamps - Hg, Xe, HgXe.
				The Power of the Arc is now stored in the LightSource.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The type of Arc lamp.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Hg"/>
						<xsd:enumeration value="Xe"/>
						<xsd:enumeration value="HgXe"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Filament"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Filaments</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The Filament element is used to describe various kinds of filament bulbs such as Incadescent or Halogen.
				The Power of the Filament is now stored in the LightSource.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The type of filament.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Incandescent"/>
						<xsd:enumeration value="Halogen"/>
						<xsd:enumeration value="Other"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LightEmittingDiode"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>LightEmittingDiodes</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The LightEmittingDiode element is used to describe
				various kinds of LED lamps.

				As the LightEmittingDiode is inside a LightSource it already has
				available the values from ManufacturerSpec
				(Manufacturer, Model, SerialNumber, LotNumber)
				And the values from LightSource which includes Power in milliwatts

				We have looked at extending this element but have had a problem
				producing a generic solution.

				Possible attributes talked about adding include:
					Power in lumens - but this is complicated by multi-channel
						devices like CoolLED where each channel's power is different
					Wavelength Range - not a simple value so would require
						multiple attributes or a child element
					Angle of Projection - this would be further affected by the
						optics used for filtering the naked LED or that combine
						power from multiple devices

					These values are further affected if you over-drive the LED
					resulting in a more complex system

				Another issue is that LED's may not be used directly for
				illumination but as drivers for secondary emissions from doped
				fiber optics. This would require the fiber optics to be modeled.

				Thanks to Paul Goodwin of Applied Precision of information about
				this topic.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="GenericExcitationSource"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>GenericExcitationSources</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The GenericExcitationSource element is used to represent
				a source as a collection of key/value pairs, stored
				in a Map. The other lightsource objects should
				always be used in preference to this if possible.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Map" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Pump"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Pumps</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The Pump element is a reference to a LightSource.  It is used within the Laser element to specify the light source for the laser's pump (if any).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="LightSourceID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Rights"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Rights</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				The rights holder of this data and the rights held.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="RightsHolder" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> The rights holder for this data. [plane text multi-line string]
							e.g. "Copyright (C) 2002 - 2014 Open Microscopy Environment"
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="RightsHeld" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation> 
							The rights held by the rights holder. [plane text multi-line string] 
							e.g. "All rights reserved" or "Creative Commons Attribution 3.0 Unported License"
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<!-- References -->
	<xsd:complexType name="Reference">
		<xsd:annotation>
			<xsd:appinfo><xsdfu><abstract/></xsdfu></xsd:appinfo>
			<xsd:documentation>
				Reference is an empty complex type that is contained and extended by all the *Ref elements and also the Settings Complex Type
				Each *Ref element defines an attribute named ID of simple type *ID and no other information
				Each simple type *ID is restricted to the base type LSID with an appropriate pattern
			</xsd:documentation>
		</xsd:annotation>
	</xsd:complexType>

	<xsd:element name="ImageRef"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation>
				The ImageRef element is a reference to a OME:Image element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="ImageID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="FilterRef" > <!-- top level definition -->
		<xsd:complexContent>
			<xsd:extension base="Reference">
				<xsd:attribute name="ID" use="required" type="FilterID"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="MicrobeamManipulationRef"> <!-- top level definition -->
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="MicrobeamManipulationID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ExperimentRef"> <!-- top level definition -->
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="ExperimentID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ChannelRef"> <!-- top level definition -->
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="ChannelID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ProjectRef"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation>
				There may be one or more of these in a Dataset.
				This empty element has a required Project ID attribute that refers to Projects defined within the OME element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="ProjectID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ExperimenterRef"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation>
				This empty element has a required Experimenter ID and an optional DocumentID attribute which refers to one of the Experimenters defined within OME.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="ExperimenterID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ExperimenterGroupRef"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation>This empty element has a reference (the ExperimenterGroup ID attribute) to a ExperimenterGroup defined within OME.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="ExperimenterGroupID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="InstrumentRef"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation>
				This empty element can be used (via the required Instrument ID attribute) to refer to an Instrument defined within OME.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="InstrumentID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DatasetRef"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:documentation>
				The DatasetRef element refers to a Dataset by specifying the Dataset ID attribute.
				One or more DatasetRef elements may be listed within the Image element to specify what Datasets
				the Image belongs to.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="DatasetID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FilterSetRef"> <!-- top level definition -->
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Reference">
					<xsd:attribute name="ID" use="required" type="FilterSetID"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<!-- Settings -->
	<xsd:complexType name="Settings">
		<xsd:annotation>
			<xsd:appinfo><xsdfu><abstract/></xsdfu></xsd:appinfo>
			<xsd:documentation>
				Settings is an empty complex type that is contained and extended by all the *Settings elements
				Each *Settings element defines an attribute named ID of simple type *ID and the other information that is needed.
				Each simple type *ID is restricted to the base type LSID with an appropriate pattern
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Reference">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="LightSourceSettings"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>LightSourceSettingsCombinations</plural></xsdfu></xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Settings">
					<xsd:attribute name="ID" use="required" type="LightSourceID"/>
					<xsd:attribute name="Attenuation" use="optional" type="PercentFraction">
						<xsd:annotation>
							<xsd:documentation>
								The Attenuation of the light source [units:none]
								A fraction, as a value from 0.0 to 1.0.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Wavelength" use="optional" type="PositiveFloat">
						<xsd:annotation>
							<xsd:documentation>
								The Wavelength of the light source. Units are set by WavelengthUnit.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="WavelengthUnit" use="optional" default="nm" type="UnitsLength">
						<xsd:annotation>
							<xsd:documentation>
								The units of the Wavelength of the light source - default:nanometres[nm]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DetectorSettings"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>DetectorSettingsCombinations</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This holds the setting applied to a detector as well as a
				reference to the detector.
				The ID is the detector used in this case.
				The values stored in DetectorSettings represent the variable values,
				fixed values not modified during the acquisition go in Detector.

				Each attribute now has an indication of what type of detector
				it applies to. This is preparatory work for cleaning up and
				possibly splitting this object into sub-types.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Settings">
					<xsd:attribute name="ID" use="required" type="DetectorID"/>
					<xsd:attribute name="Offset" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Offset of the detector. [units none] {used:CCD,EMCCD}
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Gain" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Gain of the detector. [units:none] {used:CCD,EMCCD,PMT}
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Voltage" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Voltage of the detector. {used:PMT}
								Units are set by VoltageUnit.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="VoltageUnit" use="optional" default="V" type="UnitsElectricPotential">
						<xsd:annotation>
							<xsd:documentation>
								The units of the Voltage of the detector - default:volts[V]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Zoom" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The Zoom or "Confocal Zoom" or "Scan Zoom" for a detector. [units:none] {used:PMT}
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="ReadOutRate" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The speed at which the detector can count pixels.  {used:CCD,EMCCD}
								This is the bytes per second that
								can be read from the detector (like a baud rate).
								Units are set by ReadOutRateUnit.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="ReadOutRateUnit" use="optional" default="MHz" type="UnitsFrequency">
						<xsd:annotation>
							<xsd:documentation>The units of the ReadOutRate - default:megahertz[Hz].</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Binning" use="optional">
						<xsd:annotation>
							<xsd:documentation>
								Represents the number of pixels that are combined to form larger pixels. {used:CCD,EMCCD}
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="1x1"/>
								<xsd:enumeration value="2x2"/>
								<xsd:enumeration value="4x4"/>
								<xsd:enumeration value="8x8"/>
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Integration" use="optional" type="PositiveInt">
						<xsd:annotation>
							<xsd:documentation>
								This is the number of sequential frames that get averaged,
								to improve the signal-to-noise ratio. [units:none] {used:CCD,EMCCD}
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ObjectiveSettings"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ObjectiveSettingsCombinations</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>
				This holds the setting applied to an objective as well as a
				reference to the objective.
				The ID is the objective used in this case.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Settings">
					<xsd:attribute name="ID" use="required" type="ObjectiveID"/>
					<xsd:attribute name="CorrectionCollar" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The CorrectionCollar is normally an adjustable ring on the
								objective. Each has an arbitrary scale on it so the values
								is unit-less. [units:none]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Medium" use="optional">
						<xsd:simpleType>
							<xsd:annotation>
								<xsd:documentation>
									A description of a Medium used for the lens.
									The Medium is the actual immersion medium used in this case.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Air"/>
								<xsd:enumeration value="Oil"/>
								<xsd:enumeration value="Water"/>
								<xsd:enumeration value="Glycerol"/>
								<xsd:enumeration value="Other"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="RefractiveIndex" use="optional" type="xsd:float">
						<xsd:annotation>
							<xsd:documentation>
								The RefractiveIndex is that of the immersion medium. This is
								a ratio so it also unit-less. [units:none]
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<!-- ID types -->
	<xsd:simpleType name="LSID">
		<xsd:annotation>
			<xsd:documentation>
				Either LSID or internal consistent IDs for the file
				See: http://www.openmicroscopy.org/site/support/file-formats/working-with-ome-xml/id-and-lsid
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:\S+:\S+)|(\S+:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ProjectID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Project:\S+)|(Project:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DatasetID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Dataset:\S+)|(Dataset:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ImageID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Image:\S+)|(Image:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ExperimenterID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Experimenter:\S+)|(Experimenter:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ExperimenterGroupID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:ExperimenterGroup:\S+)|(ExperimenterGroup:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ExperimentID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Experiment:\S+)|(Experiment:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MicrobeamManipulationID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:MicrobeamManipulation:\S+)|(MicrobeamManipulation:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="InstrumentID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Instrument:\S+)|(Instrument:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ObjectiveID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Objective:\S+)|(Objective:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LightSourceID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:LightSource:\S+)|(LightSource:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DichroicID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Dichroic:\S+)|(Dichroic:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="FilterID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Filter:\S+)|(Filter:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="FilterSetID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:FilterSet:\S+)|(FilterSet:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DetectorID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Detector:\S+)|(Detector:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PixelsID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Pixels:\S+)|(Pixels:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ChannelID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Channel:\S+)|(Channel:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ModuleID">
		<xsd:restriction base="LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Module:\S+)|(Module:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>
