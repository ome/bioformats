<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xs:schema xmlns = "http://www.openmicroscopy.org/XMLschemas/OME/RC6/ome.xsd"
	 targetNamespace = "http://www.openmicroscopy.org/XMLschemas/OME/RC6/ome.xsd"
	 xmlns:xs = "http://www.w3.org/2001/XMLSchema"
	 xmlns:AML = "http://www.openmicroscopy.org/XMLschemas/AnalysisModule/RC1/AnalysisModule.xsd"
	 xmlns:STD = "http://www.openmicroscopy.org/XMLschemas/STD/RC2/STD.xsd"
	 xmlns:Bin = "http://www.openmicroscopy.org/XMLschemas/BinaryFile/RC1/BinaryFile.xsd"
	 version = "RC6"
	 elementFormDefault = "qualified">
<!--
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    #
    # Copyright (C) 2002-2011 Open Microscopy Environment
    #       Massachusetts Institute of Technology,
    #       National Institutes of Health,
    #       University of Dundee,
    #       University of Wisconsin at Madison
    #
    # This work is licensed under the
    #       Creative Commons Attribution 3.0 Unported License.
    # To view a copy of this license, visit
    #       http://creativecommons.org/licenses/by/3.0/
    # or send a letter to
    #       Creative Commons, 444 Castro Street, Suite 900,
    #       Mountain View, California, 94041, USA.
    # For attribution instructions, visit
    #       http://www.openmicroscopy.org/info/attribution
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
	<xs:import namespace = "http://www.openmicroscopy.org/XMLschemas/AnalysisModule/RC1/AnalysisModule.xsd" schemaLocation = "http://www.openmicroscopy.org/XMLschemas/AnalysisModule/RC1/AnalysisModule.xsd"/>
	<xs:import namespace = "http://www.openmicroscopy.org/XMLschemas/STD/RC2/STD.xsd" schemaLocation = "http://www.openmicroscopy.org/XMLschemas/STD/RC2/STD.xsd"/>
	<xs:import namespace = "http://www.openmicroscopy.org/XMLschemas/BinaryFile/RC1/BinaryFile.xsd" schemaLocation = "http://www.openmicroscopy.org/XMLschemas/BinaryFile/RC1/BinaryFile.xsd"/>
	<xs:annotation>
		<xs:documentation>
			Open Microscopy Environment
			OME XML Schema 1.0 RC6
			Author:  Ilya G. Goldberg
			Copyright (C) 2002-2011 Open Microscopy Environment
		</xs:documentation>
	</xs:annotation>
	<xs:element name = "OME">
		<xs:annotation>
			<xs:documentation>
				The OME element is a container for all information objects acessible by OME.  These information objects include descriptions of the imaging experiments
				and the people who perform them, descriptions of the microscope, the resulting images and how they were acquired, the analyses performed on those images,
				and the analysis results themselves.
				An OME file may contain any or all of this information, and this information may be distributed among several OME documents.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "DocumentGroup" minOccurs = "0"/>
				<xs:element ref = "Project" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Dataset" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Experiment" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Plate" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Screen" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Experimenter" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Group" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Instrument" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Image" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "STD:SemanticTypeDefinitions" minOccurs = "0"/>
				<xs:element ref = "AML:AnalysisModuleLibrary" minOccurs = "0"/>
				<xs:element ref = "CustomAttributes" minOccurs = "0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Image">
		<xs:annotation>
			<xs:documentation>
				This element describes the actual image and its meta-data.
				The elements that are references (ending in Ref) refer to elements defined outside of the Image element.
				If any of the required Image attributes are missing, its guaranteed to be an invalid document.
				The only required elements are the CreationDate and Pixels.
				ImageType is a vendor-specific designation of the type of image this is.
				Examples of ImageType include 'STK', 'SoftWorx', etc.
				The Name attributes are in all cases the name of the element instance. In this case, the name of the image,
				not necessarily the filename.
				PixelSize* is in microns.
				TimeIncrement is used for time series that have a global timing specification instead of per-timepoint timing info.
				For example in a video stream.  The unit is seconds.
				Similarly, WaveStart and WaveIncrement are used in spectral images like FTIR.  These are both positive integers.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "CreationDate"/>
				<xs:element ref = "Description" minOccurs = "0"/>
				<xs:element ref = "ExperimentRef" minOccurs = "0"/>
				<xs:element ref = "GroupRef" minOccurs = "0"/>
				<xs:element ref = "DatasetRef" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "InstrumentRef" minOccurs = "0"/>
				<xs:element ref = "ImagingEnvironment" minOccurs = "0"/>
				<xs:element ref = "Thumbnail" minOccurs = "0"/>
				<xs:element ref = "ChannelInfo" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "DisplayOptions" minOccurs = "0"/>
				<xs:element ref = "StageLabel" minOccurs = "0"/>
				<xs:element ref = "PlateRef" minOccurs = "0"/>
				<xs:element ref = "Pixels" maxOccurs = "unbounded"/>
				<xs:element ref = "Feature" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "CustomAttributes" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "ImageID" type = "ImageID" use = "required"/>
			<xs:attribute name = "Type" use = "required" type = "xs:string"/>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "SizeX" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "SizeY" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "SizeZ" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "NumChannels" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "NumTimes" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "PixelSizeX" use = "required" type = "xs:float"/>
			<xs:attribute name = "PixelSizeY" use = "required" type = "xs:float"/>
			<xs:attribute name = "PixelSizeZ" use = "required" type = "xs:float"/>
			<xs:attribute name = "TimeIncrement" type = "xs:float"/>
			<xs:attribute name = "WaveStart" type = "xs:positiveInteger"/>
			<xs:attribute name = "WaveIncrement" type = "xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "CreationDate" type = "xs:dateTime">
		<xs:annotation>
			<xs:documentation>
				The creation date of the Image - when the Image was acquired.
				The element contains a string in the ISO 8601 dateTime format (i.e. 1988-04-07T18:39:09)
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Pixels">
		<xs:annotation>
			<xs:documentation>
				The Image will be unreadable if any of the required Pixel attributes are missing (all except DerivedFrom).
				The Pixels themselves may be stored externally or internally.  Internal storage is encoded in Base64.
				DimensionOrder is a string enumeration which must be set to 'XYZCT', 'XYZTC', 'XYCTZ', 'XYCZT', 'XYTCZ',  or 'XYTZC'.
				PixelType is a string enumeration which must be set to 'bit','int8','int16','int32','Uint8','Uint16','Uint32','float','double','complex','double-complex'.
				BigEndian is a boolean ('true' or 'false').  True for essentially all modern CPUs other than Intel and Alpha.
				This element must contain a list of BinData or External elements.  These elements, when read in document order, must produce a 5-D pixel array
				of the size specified elsewhere in this document, and in the dimension order specified by 'DimensionOrder'.
				If BinData elements are used, there must be exactly one BinData element per XY plane in the 5-D array.
				If External elements are used, the optional Offset and ReadLength attributes allow the OME file to act as a meta-file for proprietary image formats.
				There is no restriction on the number of External elements or how many times a given file appears in the list
				as long as when they are all read in document order they produce the specified 5-D array.
				The optional DerivedFrom element is a reference to another Pixels element.  When used, it indicates that these Pixels are not raw data, but are derived
				from a different set of pixels using the specified 'Method'.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "DerivedFrom" minOccurs = "0"/>
				<xs:choice>
					<xs:element ref = "Bin:External" maxOccurs = "unbounded"/>
					<xs:element ref = "Bin:BinData" maxOccurs = "unbounded"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name = "PixelsID" use = "required">
				<xs:simpleType>
					<xs:restriction base = "GUID">
						<xs:pattern value = "(\d+\.){2}31(\.\d+){2}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "DimensionOrder" use = "required">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "XYZCT"/>
						<xs:enumeration value = "XYZTC"/>
						<xs:enumeration value = "XYCTZ"/>
						<xs:enumeration value = "XYCZT"/>
						<xs:enumeration value = "XYTCZ"/>
						<xs:enumeration value = "XYTZC"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "PixelType" type = "PixelTypes" use = "required"/>
			<xs:attribute name = "BigEndian" use = "required" type = "xs:boolean"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Experiment">
		<xs:annotation>
			<xs:documentation>
				This element describes the type of experiment.  The required Type attribute must contain one or more entries from the following list:
				FP FRET Time-lapse 4-D+ Screen Immunocytochemistry FISH Electrophysiology  Ion-Imaging Colocalization PGI/Documentation
				FRAP Photoablation Optical-Trapping Photoactivation Fluorescence-Lifetime Spectral-Imaging Other
				FP refers to fluorescent proteins, PGI/Docuemntation is not a 'data' image.
				The optional Description element may contain free text to further describe the experiment.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Description" minOccurs = "0"/>
				<xs:element ref = "ExperimenterRef"/>
			</xs:sequence>
			<xs:attribute name = "Type" use = "required">
				<xs:simpleType>
					<xs:list>
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:enumeration value = "FP"/>
								<xs:enumeration value = "FRET"/>
								<xs:enumeration value = "Time-lapse"/>
								<xs:enumeration value = "4-D+"/>
								<xs:enumeration value = "Screen"/>
								<xs:enumeration value = "Immunocytochemistry"/>
								<xs:enumeration value = "Immunofluorescence"/>
								<xs:enumeration value = "FISH"/>
								<xs:enumeration value = "Electrophysiology"/>
								<xs:enumeration value = "Ion-Imaging"/>
								<xs:enumeration value = "Colocalization"/>
								<xs:enumeration value = "PGI/Documentation"/>
								<xs:enumeration value = "FRAP"/>
								<xs:enumeration value = "Photoablation"/>
								<xs:enumeration value = "Photoactivation"/>
								<xs:enumeration value = "Uncaging"/>
								<xs:enumeration value = "Optical-Trapping"/>
								<xs:enumeration value = "Fluorescence-Lifetime"/>
								<xs:enumeration value = "Spectral-Imaging"/>
								<xs:enumeration value = "Other"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:list>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "ExperimentID" use = "required">
				<xs:simpleType>
					<xs:restriction base = "GUID">
						<xs:pattern value = "(\d+\.){2}72(\.\d+){2}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name = "ExperimentRef">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "ExperimentID" type = "ExperimentID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "ExWave" type = "xs:positiveInteger">
		<xs:annotation>
			<xs:documentation>Excitation wavelength in nm.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "ChannelInfo">
		<xs:annotation>
			<xs:documentation>
				There must be one per channel in the Image, even for a single-plane image.  In OME, Channels (e.g. 'FITC', 'Texas Red', etc) are specified as Logical Channels,
				And information about how each of them was acquired is stored in the various optional *Ref elements.  Each Logical Channel may be composed of one or more
				ChannelComponents.  For example, an entire spectrum in an FTIR experiment may be stored in a single Logical Channel with each discrete wavenumber of the spectrum
				constituting a ChannelComponent of the FTIR Logical Channel.  An RGB image where the Red, Green and Blue components do not reflect discrete probes but are
				instead the output of a color camera would be treated similarly - one Logical channel with three ChannelComponents in this case.
				The AuxLightSourceRef element is a reference to a LightSource specified in the Instrument element which was used for a technique other than illumination for
				the purpose of imaging.  For example, a laser used for photobleaching.
				The SamplesPerPixel attribute is the number of channel components in the logical channel.
				The IlluminationType attribute is a string enumeration which may be set to 'Transmitted', 'Epifluorescence', or 'Oblique'.
				The optional PinholeAize attribute allows specifying adjustable pin hole diameters for confocal microscopes.
				The PhotometricInterpretation attribute is used to describe how to display a multi-component channel.  This attribute may be set to:
				'monochrome', 'RGB', 'ARGB', 'CMYK', 'HSV'.  The default for single-component channels is 'monochrome'.
				The Model attribute describes the type of microscopy performed for each channel.  This may be set to:
				'Wide-field','Wide-field','Laser Scanning Microscopy','Laser Scanning Confocal','Spinning Disk Confocal','Slit Scan Confocal','Multi-Photon Microscopy',
				'Structured Illumination','Single Molecule Imaging','Total Internal Reflection','Fluorescence-Lifetime','Spectral Imaging',
				'Fluorescence Correlation Spectroscopy','Near Field Scanning Optical Microscopy','Second Harmonic Generation Imaging'.
				The ContrastMethod attribute may be set to 'Brightfield','Phase','DIC','Hoffman Modulation','Oblique Illumination','Polarized Light','Darkfield','Fluorescence'.
				The ExWave, EmWave and Fluor attributes allow specifying the nominal excitation and emission wavelengths and the type of fluor being imaged in a particular channel.
				The Fluor attribute is used for fluorescence images, while the Name attribute is used to name channels that are not imaged using fluorescence techniques.
				The user interface logic for labeling a given channel for the user should use the first existing attribute in the following sequence:
				Name -> Fluor -> EmWave -> ChannelComponent/Index.
				The NDfilter attribute is used to specify (in O.D. units) the combined effect of any neutral density filters used.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "LightSourceRef" minOccurs = "0"/>
				<xs:element ref = "AuxLightSourceRef" minOccurs = "0"/>
				<xs:element ref = "OTFRef" minOccurs = "0"/>
				<xs:element ref = "DetectorRef" minOccurs = "0"/>
				<xs:element ref = "FilterRef" minOccurs = "0"/>
				<xs:element ref = "ChannelComponent" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "SamplesPerPixel" type = "xs:integer"/>
			<xs:attribute name = "IlluminationType">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "Transmitted"/>
						<xs:enumeration value = "Epifluorescence"/>
						<xs:enumeration value = "Oblique"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "PinholeSize" type = "xs:positiveInteger"/>
			<xs:attribute name = "PhotometricInterpretation" default = "monochrome">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "monochrome"/>
						<xs:enumeration value = "RGB"/>
						<xs:enumeration value = "ARGB"/>
						<xs:enumeration value = "CMYK"/>
						<xs:enumeration value = "HSV"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "Mode">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "Wide-field"/>
						<xs:enumeration value = "Laser Scanning Microscopy"/>
						<xs:enumeration value = "Laser Scanning Confocal"/>
						<xs:enumeration value = "Spinning Disk Confocal"/>
						<xs:enumeration value = "Slit Scan Confocal"/>
						<xs:enumeration value = "Multi-Photon Microscopy"/>
						<xs:enumeration value = "Structured Illumination"/>
						<xs:enumeration value = "Single Molecule Imaging"/>
						<xs:enumeration value = "Total Internal Reflection"/>
						<xs:enumeration value = "Fluorescence-Lifetime"/>
						<xs:enumeration value = "Spectral Imaging"/>
						<xs:enumeration value = "Fluorescence Correlation Spectroscopy"/>
						<xs:enumeration value = "Near Field Scanning Optical Microscopy"/>
						<xs:enumeration value = "Second Harmonic Generation Imaging"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "ContrastMethod">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "Brightfield"/>
						<xs:enumeration value = "Phase"/>
						<xs:enumeration value = "DIC"/>
						<xs:enumeration value = "Hoffman Modulation"/>
						<xs:enumeration value = "Oblique Illumination"/>
						<xs:enumeration value = "Polarized Light"/>
						<xs:enumeration value = "Darkfield"/>
						<xs:enumeration value = "Fluorescence"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "ExWave" type = "xs:positiveInteger"/>
			<xs:attribute name = "EmWave" type = "xs:positiveInteger"/>
			<xs:attribute name = "Fluor" type = "xs:string"/>
			<xs:attribute name = "NDfilter" type = "xs:float"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "DisplayOptions">
		<xs:annotation>
			<xs:documentation>
				There is optionally one of these per Image.
				This specifies mapping of image channel components to RGB or greyscale colorspace with one byte per pixel per RGB channel.
				Elements of type ChannelScaleType specify the scaling of pixel values to 8-bit colorspace values.
				These elements have three required attributes:  the ChannelNumber, BlackLevel, and WhiteLevel.
				The fourth Gamma attribute is optional.
				The ChannelNumber specifies the channel number in the pixel dump.  Channels are numbered from 0.
				Pixel values between BlackLevel and WhiteLevel will be assigned values 0-255, respectively.
				Values below BlackLevel or above WhiteLevel will be assigned 0 and 255 respectively.
				Either the GreyChannel or one or more of RedChannel, GreenChannel, BlueChannel must be specified.
				The Projection element specifies that the display is a maximum intensity projection.
				The range of Z-sections for the projection is specified with the Zstart and Zstop attributes.
				Presence of the Movie element indicates that the display should be a movie.
				The range of timepoints to display in the movie is specified by the Tstart and Tstop attributes.
				The MIME type of the desired video format is specified by Movie's MIMEtype attribute.
				The ROI element describes a 3-D region of interest.  It is up to the viewer to either display the ROI only,
				or to simply mark it somehow.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:sequence>
						<xs:element ref = "RedChannel" minOccurs = "0"/>
						<xs:element ref = "GreenChannel" minOccurs = "0"/>
						<xs:element ref = "BlueChannel" minOccurs = "0"/>
					</xs:sequence>
					<xs:element ref = "GreyChannel"/>
				</xs:choice>
				<xs:element ref = "Projection" minOccurs = "0"/>
				<xs:element ref = "Time" minOccurs = "0"/>
				<xs:element ref = "ROI" minOccurs = "0" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "Zoom" type = "xs:float"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "RedChannel" type = "ChannelScaleType">
		<xs:annotation>
			<xs:documentation>
				The wave number, black level, white level and optional gamma for the red channel of an RGB image.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "GreenChannel" type = "ChannelScaleType">
		<xs:annotation>
			<xs:documentation>
				The wave number, black level, white level and optional gamma for the green channel of an RGB image.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "BlueChannel" type = "ChannelScaleType">
		<xs:annotation>
			<xs:documentation>
				The wave number, black level, white level and optional gamma for the blue channel of an RGB image.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "GreyChannel">
		<xs:annotation>
			<xs:documentation>
				The wave number, black level, white level and optional gamma for a greyscale image.
				The GreyChannel element may contain an optional ColorMap attribute, which can be set to ''
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "ChannelScaleType">
					<xs:attribute name = "ColorMap" default = "Greyscale">
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:enumeration value = "Greyscale"/>
								<xs:enumeration value = "Spectrum"/>
								<xs:enumeration value = "Blackbody"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name = "ChannelScaleType">
		<xs:attribute name = "ChannelNumber" use = "required" type = "xs:integer"/>
		<xs:attribute name = "BlackLevel" use = "required" type = "xs:integer"/>
		<xs:attribute name = "WhiteLevel" use = "required" type = "xs:integer"/>
		<xs:attribute name = "Gamma" type = "xs:float"/>
	</xs:complexType>
	<xs:element name = "Projection">
		<xs:annotation>
			<xs:documentation>
				The presence of this element indicates the user wants to view the Image as a maximum intensity projection.
				The Zstart and Zstop attributes are optional.  If they are not specified, then the entire Z stack will be projected.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Zstart" type = "xs:integer"/>
			<xs:attribute name = "Zstop" type = "xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Time">
		<xs:annotation>
			<xs:documentation>
				The time range the user is interested in the initial viewer display.  A range of timepoints indicates a movie
				If they are not specified, the movie is to include all timepoints.
				If the Time attributes point to a single time-point, that is the timepoint to be initially displayed.
				If the entire element is missing, the first time-point  will be displayed
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Tstart" type = "xs:integer"/>
			<xs:attribute name = "Tstop" type = "xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Instrument">
		<xs:annotation>
			<xs:documentation>
				This element describes the instrument used to capture the Image.
				It is primarily a container for manufacturer's model and catalog numbers for the
				Microscope, LightSource, Detector, Objective and Filters components.
				Additionally, one or more OTF elements may be specified, describing the optical transfer function under different conditions.
				The Objective element contains the additional elements LensNA and Magnification.
				The Filters element can be composed either of separate excitation, emission filters and a dichroic mirror
				or a single filter set.  Within the Image itself, a reference is made to this one Filter element.
				The OTF element contains an optical transfer function.
				The same OTF can be used for all wavelengths, or there may be one per wavelength.
				There may be multiple light sources, detectors, objectives and filters on a microscope.
				Each of these has their own ID attribute, which can be referred to from ChannelInfo.
				It is understood that the light path configuration can be different for each channel,
				but cannot be different for each timepoint or each plane of an XYZ stack.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Microscope"/>
				<xs:element ref = "LightSource" maxOccurs = "unbounded"/>
				<xs:element ref = "Detector" maxOccurs = "unbounded"/>
				<xs:element ref = "Objective" maxOccurs = "unbounded"/>
				<xs:element ref = "Filter" maxOccurs = "unbounded"/>
				<xs:element ref = "OTF" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "InstrumentID" type = "InstrumentID" use = "required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "StageLabel">
		<xs:annotation>
			<xs:documentation>
				The StageLabel is used to specify a name and position for a stage position in the microscope's reference frame.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "X" type = "xs:float"/>
			<xs:attribute name = "Y" type = "xs:float"/>
			<xs:attribute name = "Z" type = "xs:float"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Experimenter" type = "ExperimenterType">
		<xs:annotation>
			<xs:documentation>
				This element describes a person who performed an imaging experiment.  Required elements are FirstName, LastName and Email.
				This person may also be a user of the OME system, in which case the OMEName element contains their login name.
				Experimenters may belong to one or more groups which are specified using one or more GroupRef elements.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "OMEName" type = "xs:string">
		<xs:annotation>
			<xs:documentation>This is the username of the experimenter (in a 'unix' or 'database' sense).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "FirstName" type = "xs:string">
		<xs:annotation>
			<xs:documentation>First name, optionally containing a middle initial.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "LastName" type = "xs:string">
		<xs:annotation>
			<xs:documentation>A person's last or surname.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Email" type = "xs:string">
		<xs:annotation>
			<xs:documentation>A person's  email address.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Screen">
		<xs:annotation>
			<xs:documentation>
				The Screen element is a grouping for Plates.
				The required attribute is the Screen's Name and ID - both must be unique within the document.
				The Screen element may contain an ExternalRef attribute that refers to an external database.
				A description of the screen may be specified in the Description element.
				Screens may contain overlapping sets of Plates i.e.  Screens and Plates have a many-to-many relationship.
				Plates contain one or more ScreenRef elements to specify what screens they belong to.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Description" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "ScreenID" type = "ScreenID" use = "required"/>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "ExternRef" type = "ExternDBref"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "ScreenRef">
		<xs:annotation>
			<xs:documentation>
				The ScreenRef element is a reference to a Screen element.
				Plate elements may have one or more ScreenRef elements to define the screen that a plate belongs to.
				Plates may belong to more than one screen.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "ScreenID" type = "ScreenID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Plate">
		<xs:annotation>
			<xs:documentation>
				This element identifies microtiter plates within a screen.
				A plate can belong to more than one screen.
				The Screen(s) that a plate belongs to are specified by the ScreenRef element.
				The EternRef attribute may contain a reference to an external database.
				The PlateID and Name attributes are required.
				The Name identifies the plate to the user.  It is used much like the PlateID, and so must be unique within the document.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "ScreenRef" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "PlateID" type = "PlateID" use = "required"/>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "ExternRef" type = "ExternDBref"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Objective">
		<xs:annotation>
			<xs:documentation>
				A description of the microscope's objective lens.
				Required elements include the lens numerical aperture, and the magnification, both of which a floating point (real) numbers.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "ManufactSpec">
					<xs:sequence>
						<xs:element ref = "LensNA"/>
						<xs:element ref = "Magnification"/>
					</xs:sequence>
					<xs:attribute name = "ObjectiveID" type = "ObjectiveID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Filter">
		<xs:annotation>
			<xs:documentation>
				Filters may be separate excitation dichroic mirror and emission filters specified by the
				ExFilter, Dichroic and EmFilter tags respectively.
				Alternatively all three components may be specified by a single filter set.
				There should be one filter element specified per wavelength in the image.
				The channel number associated with a filter set is specified in ChannelInfo's required ChannelComponent element and its Index attribute.
				All  elements are FilterSpec type, so they have the required attributes Manufacturer, Model, and LotNumber.
				The ExFilter an EmFilter elements may also contain a Type attribute which may be set to
				'LongPass', 'ShortPass', 'BandPass', or 'MultiPass'.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:sequence>
						<xs:element ref = "ExFilter"/>
						<xs:element ref = "Dichroic"/>
						<xs:element ref = "EmFilter"/>
					</xs:sequence>
					<xs:element ref = "FilterSet"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name = "FilterID" type = "FilterID" use = "required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Magnification" type = "xs:float">
		<xs:annotation>
			<xs:documentation>The magnification of the lens - i.e. '60.0' is a 60X lens.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "LensNA" type = "xs:float">
		<xs:annotation>
			<xs:documentation>The numerical aperture of the lens expressed as a floating point (real) number.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "ExFilter">
		<xs:annotation>
			<xs:documentation>
				Excitation filter manufacturer specification.
				The optional Type attribute may contain 'LongPass', 'ShortPass', 'BandPass', or 'MultiPass'.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "FilterSpec">
					<xs:attribute name = "Type">
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:enumeration value = "LongPass"/>
								<xs:enumeration value = "ShortPass"/>
								<xs:enumeration value = "BandPass"/>
								<xs:enumeration value = "MultiPass"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "EmFilter">
		<xs:annotation>
			<xs:documentation>
				Emission filter manufacturer specification.
				The optional Type attribute may contain 'LongPass', 'ShortPass', 'BandPass', or 'MultiPass'.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "FilterSpec">
					<xs:attribute name = "Type">
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:enumeration value = "LongPass"/>
								<xs:enumeration value = "ShortPass"/>
								<xs:enumeration value = "BandPass"/>
								<xs:enumeration value = "MultiPass"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "FilterSet" type = "FilterSpec">
		<xs:annotation>
			<xs:documentation>Filter set manufacturer specification</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Detector">
		<xs:annotation>
			<xs:documentation>
				The type of detector used to capture the image.
				The DetectorID can be used as a reference within the ChannelInfo element in the Image element.
				The Type attribute can be set to 'CCD','Intensified-CCD','Analog-Video','PMT','Photodiode','Spectroscopy','Life-time-Imaging','Correlation-Spectroscopy','FTIR'.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "ManufactSpec">
					<xs:attribute name = "Gain" type = "xs:float"/>
					<xs:attribute name = "Voltage" type = "xs:float"/>
					<xs:attribute name = "Offset" type = "xs:float"/>
					<xs:attribute name = "DetectorID" type = "DetectorID" use = "required"/>
					<xs:attribute name = "Type" use = "required">
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:enumeration value = "CCD"/>
								<xs:enumeration value = "Intensified-CCD"/>
								<xs:enumeration value = "Analog-Video"/>
								<xs:enumeration value = "PMT"/>
								<xs:enumeration value = "Photodiode"/>
								<xs:enumeration value = "Spectroscopy"/>
								<xs:enumeration value = "Life-time-Imaging"/>
								<xs:enumeration value = "Correlation-Spectroscopy"/>
								<xs:enumeration value = "FTIR"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Description">
		<xs:annotation>
			<xs:documentation>
				Just some free-form text to describe Images, Screens and Projects.
				The content model is ANY, which means that en entire XML sub-document can be placed here.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Microscope">
		<xs:annotation>
			<xs:documentation>The microscope's manufacturer specification.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "ManufactSpec">
					<xs:attribute name = "Type" use = "required">
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:enumeration value = "Upright"/>
								<xs:enumeration value = "Inverted"/>
								<xs:enumeration value = "Dissection"/>
								<xs:enumeration value = "Electrophysiology"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name = "ManufactSpec">
		<xs:attribute name = "Manufacturer" use = "required" type = "xs:string"/>
		<xs:attribute name = "Model" use = "required" type = "xs:string"/>
		<xs:attribute name = "SerialNumber" use = "required" type = "xs:string"/>
	</xs:complexType>
	<xs:element name = "Thumbnail">
		<xs:annotation>
			<xs:documentation>
				The thumbnail may be an external URI reference specified by the href attribute, or it may contain an SVG sub-document
				(denoted by the #wildCard 'element').
				The MIMEtype is a required attribute, and must be set to 'SVG' if the tag's contents are an SVG document.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:any namespace = "http://www.w3.org/2000/svg" processContents = "strict" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "href" type = "xs:anyURI"/>
			<xs:attribute name = "MIMEtype" use = "required" type = "MIMEtype"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Project">
		<xs:annotation>
			<xs:documentation>
				The ProjectID and Name attributes are required.
				Datasets can be grouped into projects using a many-to-many relationship.
				A Dataset may belong to one or more Projects by including one or more ProjectRef elements which refer to ProjectIDs.
				Projects do not directly contain images - only by virtue of containing datasets, which themselves contain images.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Description" minOccurs = "0"/>
				<xs:element ref = "ExperimenterRef"/>
				<xs:element ref = "GroupRef"/>
			</xs:sequence>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "ProjectID" type = "ProjectID" use = "required"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name = "MIMEtype">
		<xs:restriction base = "xs:string"/>
	</xs:simpleType>
	<xs:simpleType name = "ExternDBref">
		<xs:restriction base = "xs:string"/>
	</xs:simpleType>
	<xs:simpleType name = "Hex40">
		<xs:restriction base = "xs:hexBinary">
			<xs:length value = "20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "MetalVaporLaserMedia">
		<xs:restriction base = "xs:string">
			<xs:enumeration value = "Cu"/>
			<xs:enumeration value = "Ag"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "ExcimerLaserMedia">
		<xs:restriction base = "xs:string">
			<xs:enumeration value = "ArFl"/>
			<xs:enumeration value = "ArCl"/>
			<xs:enumeration value = "KrFl"/>
			<xs:enumeration value = "KrCl"/>
			<xs:enumeration value = "XeFl"/>
			<xs:enumeration value = "XeCl"/>
			<xs:enumeration value = "XeBr"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "GasLaserMedia">
		<xs:restriction base = "xs:string">
			<xs:enumeration value = "Nitrogen"/>
			<xs:enumeration value = "Argon"/>
			<xs:enumeration value = "Krypton"/>
			<xs:enumeration value = "Xenon"/>
			<xs:enumeration value = "HeNe"/>
			<xs:enumeration value = "HeCd"/>
			<xs:enumeration value = "CO"/>
			<xs:enumeration value = "CO2"/>
			<xs:enumeration value = "H2O"/>
			<xs:enumeration value = "HFl"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "SolidStateLaserMedia">
		<xs:restriction base = "xs:string">
			<xs:enumeration value = "Nd-Glass"/>
			<xs:enumeration value = "Nd-YAG"/>
			<xs:enumeration value = "Er-Glass"/>
			<xs:enumeration value = "Er-YAG"/>
			<xs:enumeration value = "Ho-YLF"/>
			<xs:enumeration value = "Ho-YAG"/>
			<xs:enumeration value = "Ruby"/>
			<xs:enumeration value = "Ti-Sapphire"/>
			<xs:enumeration value = "Alexandrite"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "DyeLaserMedia">
		<xs:restriction base = "xs:string">
			<xs:enumeration value = "Rhodamine-6G"/>
			<xs:enumeration value = "Coumarin-C30"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "SemiconductorLaserMedia">
		<xs:restriction base = "xs:string">
			<xs:enumeration value = "GaAs"/>
			<xs:enumeration value = "GaAlAs"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "FreeElectronLaserMedia">
		<xs:restriction base = "xs:string">
			<xs:enumeration value = "e-"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "LaserMedia">
		<xs:union memberTypes = "MetalVaporLaserMedia ExcimerLaserMedia GasLaserMedia SolidStateLaserMedia DyeLaserMedia SemiconductorLaserMedia FreeElectronLaserMedia"/>
	</xs:simpleType>
	<xs:simpleType name = "PercentFraction">
		<xs:restriction base = "xs:float">
			<xs:maxInclusive value = "1.0"/>
			<xs:minInclusive value = "0.0"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "GUID">
		<xs:restriction base = "xs:string">
			<xs:maxLength value = "64"/>
			<xs:pattern value = "(\d+\.){4}\d+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "DocumentID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}70(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "ProjectID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}1(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "DatasetID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}2(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "ImageID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}3(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "FeatureID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}4(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "ExperimenterID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}71(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "GroupID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}73(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "ExperimentID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}72(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "InstrumentID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}74(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "ObjectiveID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}741(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "LightSourceID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}742(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "FilterID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}743(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "OTFID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}745(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "DetectorID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}744(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "PixelsID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}31(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "PlateID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}75(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "ScreenID">
		<xs:restriction base = "GUID">
			<xs:pattern value = "(\d+\.){2}76(\.\d+){2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name = "PixelTypes">
		<xs:restriction base = "xs:string">
			<xs:enumeration value = "bit"/>
			<xs:enumeration value = "int8"/>
			<xs:enumeration value = "int16"/>
			<xs:enumeration value = "int32"/>
			<xs:enumeration value = "Uint8"/>
			<xs:enumeration value = "Uint16"/>
			<xs:enumeration value = "Uint32"/>
			<xs:enumeration value = "float"/>
			<xs:enumeration value = "double"/>
			<xs:enumeration value = "complex"/>
			<xs:enumeration value = "double-complex"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:element name = "ProjectRef">
		<xs:annotation>
			<xs:documentation>
				There may be one or more of these in a Dataset.
				This empty element has a required ProjectID attribute that refers to Projects defined within the OME element.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "ProjectID" type = "ProjectID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "ExperimenterRef">
		<xs:annotation>
			<xs:documentation>
				This empty element has a required ExperimenterID and an optional DocumentID attribute which refers to one of the Experimenters defined within OME.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "ExperimenterID" type = "ExperimenterID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Group">
		<xs:annotation>
			<xs:documentation>
				The GroupID and Name attributes are required.
				Contact information should be specified for the leader of the group and a contact person.
				The Leader and/or Contact are themselves experimenters defined in OME, but they need not have OMENames.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Leader" minOccurs = "0"/>
				<xs:element ref = "Contact" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "Name" type = "xs:string"/>
			<xs:attribute name = "GroupID" type = "GroupID" use = "required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Leader">
		<xs:annotation>
			<xs:documentation>
				Contact information for a Group leader specified using a reference to an Experimenter element defined elsewhere in the document.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "ExperimenterID" type = "ExperimenterID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name = "ExperimenterType">
		<xs:annotation>
			<xs:documentation>
				An element type to specify an Experimenter under OME.
				It consists of a Person element group and a login name specified under OMEName.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref = "FirstName"/>
			<xs:element ref = "LastName"/>
			<xs:element ref = "Email"/>
			<xs:element ref = "Institution"/>
			<xs:element ref = "OMEName" minOccurs = "0"/>
			<xs:element ref = "GroupRef" maxOccurs = "unbounded"/>
		</xs:sequence>
		<xs:attribute name = "ExperimenterID" type = "ExperimenterID" use = "required"/>
	</xs:complexType>
	<xs:element name = "Contact">
		<xs:annotation>
			<xs:documentation>
				The Contact element describes the contact person for a group of experimenters - typically a project leader or lab manager.
				This person is specified as a reference to an OME experimenter.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "ExperimenterID" type = "ExperimenterID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "GroupRef">
		<xs:annotation>
			<xs:documentation>This empty element has a reference (the GroupID attribute) to a Group defined within OME.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "GroupID" type = "GroupID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "InstrumentRef">
		<xs:annotation>
			<xs:documentation>
				This empty element can be used (via the required InstrumentID attribute) to refer to an Instrument defined within OME.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "InstrumentID" type = "InstrumentID" use = "required"/>
					<xs:attribute name = "ObjectiveID" type = "ObjectiveID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Institution" type = "xs:string">
		<xs:annotation>
			<xs:documentation>
				The organizing structure that people belong to other than groups.  A university, or company, etc.
				We do not specify a department element, and do not mean for Institution to be used in this way.
				We simply wish to say XXX at YYY.  Where YYY has a better chance of being tied to a geographically fixed location
				and of being more recognizable than a group of experimenters.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Dichroic" type = "FilterSpec">
		<xs:annotation>
			<xs:documentation>The dichroic mirror used for this filter combination.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "ROI">
		<xs:annotation>
			<xs:documentation>
				A four dimensional 'Region of Interest'.  The Z and T coordinates are optional.
				If they are not used, and the Image has more than one plane,
				the entire set of planes is assumed to be included in the ROI.
				Multiple ROIs may be specified - these are meant to be displayed somehow.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "X0" use = "required" type = "xs:integer"/>
			<xs:attribute name = "Y0" use = "required" type = "xs:integer"/>
			<xs:attribute name = "Z0" type = "xs:integer"/>
			<xs:attribute name = "T0" type = "xs:string"/>
			<xs:attribute name = "X1" use = "required" type = "xs:integer"/>
			<xs:attribute name = "Y1" use = "required" type = "xs:integer"/>
			<xs:attribute name = "Z1" type = "xs:integer"/>
			<xs:attribute name = "T1" type = "xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name = "FilterSpec">
		<xs:annotation>
			<xs:documentation>
				An element type specifying a filter specification.
				Unlike the ManufactSpec, filters are referred to by lot number rather than serial number.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name = "Manufacturer" use = "required" type = "xs:string"/>
		<xs:attribute name = "Model" use = "required" type = "xs:string"/>
		<xs:attribute name = "LotNumber" use = "required" type = "xs:string"/>
	</xs:complexType>
	<xs:element name = "LightSource">
		<xs:annotation>
			<xs:documentation>
				The lightsource for the instrument.  An instrument may have several light sources.
				The type of lightsource is specified by one of the child-elements which are 'Laser', 'Filament' or 'Arc'.
				Each of the light source types has its own Type attribute to further differentiate the light source
				(eg, Nd-YAG for Laser or Hg for Arc).
				A LightSourceID must be specified for each light source,
				and the individual light sources can be referred to by their LightSourceIDs (eg from ChannelInfo).
				Lasers may have a Pump sub-element which refers to another LightSource used as a laser pump.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "ManufactSpec">
					<xs:choice>
						<xs:element ref = "Laser"/>
						<xs:element ref = "Filament"/>
						<xs:element ref = "Arc"/>
					</xs:choice>
					<xs:attribute name = "LightSourceID" type = "LightSourceID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "OTF">
		<xs:annotation>
			<xs:documentation>
				The optical transfer function.  FilterID refers to the set of filters used in computing the OTF.
				BitsPerPixel is an integer '1', '8', '16'.
				The OpticalAxisAvg is a boolean specifying wether or not optical axis averaging was done.
				SizeX, SizeY specify the width and height of the OTF.
				This element must contain either an External element or a BinData element.
				Both of these work the same way as they do for the Data element within Image.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "ObjectiveRef"/>
				<xs:element ref = "FilterRef"/>
				<xs:choice>
					<xs:element ref = "Bin:External" maxOccurs = "unbounded"/>
					<xs:element ref = "Bin:BinData" maxOccurs = "unbounded"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name = "OTFID" type = "OTFID" use = "required"/>
			<xs:attribute name = "PixelType" type = "PixelTypes" use = "required"/>
			<xs:attribute name = "OpticalAxisAvrg" use = "required" type = "xs:boolean"/>
			<xs:attribute name = "SizeX" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "SizeY" use = "required" type = "xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Dataset">
		<xs:annotation>
			<xs:documentation>
				An element specifying a collection of images that are always processed together.
				Images can belong to more than one Dataset, and a Dataset may contain more than one Image.
				Images contain one or more DatasetRef elements to specify what datasets they belong to.
				Once a Dataset has been processed in any way, its collection of images cannot be altered.
				Wether or not the list of Images in this dataset can be altered is specified by the Locked attribute.
				The ExperimenterRef and GroupRef elements specify the person and group this Dataset belongs to.
				Projects may contain one or more Datasets, and Datasets may belong to one or more Projects.
				This relationship is specified by listing ProjectRef elements within the Dataset element.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Description" minOccurs = "0"/>
				<xs:element ref = "ExperimenterRef" minOccurs = "0"/>
				<xs:element ref = "GroupRef" minOccurs = "0"/>
				<xs:element ref = "ProjectRef" maxOccurs = "unbounded"/>
				<xs:element ref = "CustomAttributes" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "DatasetID" type = "DatasetID" use = "required"/>
			<xs:attribute name = "Locked" default = "false" type = "xs:boolean"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "DatasetRef">
		<xs:annotation>
			<xs:documentation>
				The DatasetRef element refers to a Dataset by specifying the DatasetID attribute.
				One or more DatasetRef elements may be listed within the Image element to specify what Datasets
				the Image belongs to.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "DatasetID" type = "DatasetID" use = "required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "DocumentGroup">
		<xs:annotation>
			<xs:documentation>
				This element allows the grouping of several OME XML documents into one group.
				This is useful for specifying many documents and Images belonging to a single Screen, or Project or Dataset.
				All of the element IDs (i.e. ProjectID, InstrumentID, ExperimenterID, etc) become valid across the entire document group,
				meaning references are valid across documents, and not only within a document.  This also means that the element IDs
				must be unique across the entire group, and not only within a single document.
				The documents in the group are specified using one or more DocumentRef elements.
				Each of the documents in the group must have the same documents listed in their respective DocumentGroup element.
				It is not necessary (or even possible, due to the SHA1 attribute) to make self-references in this list.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name = "Include" maxOccurs = "unbounded">
					<xs:complexType>
						<xs:attribute name = "DocumentID" type = "DocumentID" use = "required"/>
						<xs:attribute name = "href" use = "required" type = "xs:anyURI"/>
						<xs:attribute name = "SHA1" use = "required" type = "Hex40"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name = "DocumentRef">
		<xs:annotation>
			<xs:documentation>The DocumentRef element refers to an external OME XML document using the href and SHA1 attributes.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "href" use = "required" type = "xs:anyURI"/>
			<xs:attribute name = "SHA1" use = "required" type = "Hex40"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "CustomAttributes">
		<xs:annotation>
			<xs:documentation>Any custom image attributes belong here. Data definitions for these attributes belong in DataDefinitions. Custom Attributes are stored in a record based format where one element corresponds to one record. Attributes of an element correspond to fields of the record.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "ImagingEnvironment">
		<xs:annotation>
			<xs:documentation>The Temperature is in Celsius, AirPressure is in millibars, Humidity and CO2Percent are percent-fractions from 0.0 to 1.0.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Temperature" type = "xs:float"/>
			<xs:attribute name = "AirPressure" type = "xs:float"/>
			<xs:attribute name = "Humidity" type = "PercentFraction"/>
			<xs:attribute name = "CO2Percent" type = "PercentFraction"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "ChannelComponent">
		<xs:annotation>
			<xs:documentation>
				Logical Channels are composed of ChannelComponents.  The Index attribute is an index into the 5-D pixel array.
				If the Logical Channel specified by ChannelInfo has a PhotometricInterpretation attribute, then the ColorDomain attribute specifies which color channel
				this ChannelComponent belongs to.  For example 'R' for an 'RGB' PhotometricInterpretation.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "ColorDomain" type = "xs:string">
				<xs:annotation>
					<xs:documentation>Specifies which component of Photometric Interpretation to map a channel component to. i.e. w/ RGB this could be 'R', 'G', 'B'
This can be null if a channel maps to a logical channel but is not included in the photometric interpretation. If this was null then the channel specified would normally be ignored.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name = "Index" type = "xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Feature">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Feature" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "CustomAttributes" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "Tag" use = "required" type = "xs:string"/>
			<xs:attribute name = "Name" type = "xs:string"/>
			<xs:attribute name = "FeatureID" type = "FeatureID" use = "required"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name = "Reference">
		<xs:attribute name = "DocumentID" type = "DocumentID"/>
	</xs:complexType>
	<xs:element name = "Laser">
		<xs:annotation>
			<xs:documentation>
				Laser types are specified using two attributes - the Type and the lasing medium (Medium).  Type is a string which may be set to:
				'Excimer','Gas','Metal Vapor','Solid State','Dye','Semiconductor', or 'Free Electron'.  The Medium attribute specifies the actual lasing medium
				for a given laser type (for example, 'Nd-YAG').  Additionally, the Wavelength (in nm), wether or not the laser is FrequencyDoubled or Tunable may be specified.
				The Pulse attribute can be set to 'CW' (Continuous Wave),','Single','Q-Switched','Repetitive','Mode-Locked'.
				The Power attribute specifies the nominal laser power in watts.
				The Laser element may contain Pump sub-elements which refer to a LightSource used as a laser pump.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Pump" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "Type" use = "required">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "Excimer"/>
						<xs:enumeration value = "Gas"/>
						<xs:enumeration value = "Metal Vapor"/>
						<xs:enumeration value = "Solid State"/>
						<xs:enumeration value = "Dye"/>
						<xs:enumeration value = "Semiconductor"/>
						<xs:enumeration value = "Free Electron"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "Medium" use = "required" type = "LaserMedia"/>
			<xs:attribute name = "Wavelength" type = "xs:positiveInteger"/>
			<xs:attribute name = "FrequencyDoubled" type = "xs:boolean"/>
			<xs:attribute name = "Tunable" type = "xs:boolean"/>
			<xs:attribute name = "Pulse">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "CW"/>
						<xs:enumeration value = "Single"/>
						<xs:enumeration value = "Q-Switched"/>
						<xs:enumeration value = "Repetitive"/>
						<xs:enumeration value = "Mode-Locked"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "Power" type = "xs:float"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Arc">
		<xs:annotation>
			<xs:documentation>
				The Arc element is used to describe various kinds of Arc lamps - Hg, Xe, Hg-Xe.
				The Power attribute is the lamp's nominal power in watts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Type" use = "required">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "Hg"/>
						<xs:enumeration value = "Xe"/>
						<xs:enumeration value = "Hg-Xe"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "Power" type = "xs:float"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Filament">
		<xs:annotation>
			<xs:documentation>
				The Filament element is used to describe various kinds of filament bulbs such as Incadescent or Halogen.
				The Power attribute is the bulb's nominal power in watts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Type" use = "required">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "Incandescent"/>
						<xs:enumeration value = "Halogen"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "Power" type = "xs:float"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "LightSourceRef">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "LightSourceID" type = "LightSourceID" use = "required"/>
					<xs:attribute name = "Attenuation" type = "PercentFraction"/>
					<xs:attribute name = "Wavelength" type = "xs:positiveInteger"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "FilterRef">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "FilterID" type = "FilterID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "OTFRef">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "OTFID" type = "OTFID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "DetectorRef">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "DetectorID" type = "DetectorID" use = "required"/>
					<xs:attribute name = "Offset" type = "xs:float"/>
					<xs:attribute name = "Gain" type = "xs:float"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Pump">
		<xs:annotation>
			<xs:documentation>
				The Pump element is a reference to a LightSource.  It is used within the Laser element to specify the light source for the laser's pump (if any).
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "LightSourceID" type = "LightSourceID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "DerivedFrom">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "PixelsID" type = "PixelsID" use = "required"/>
					<xs:attribute name = "Method" use = "required">
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:enumeration value = "Restoration"/>
								<xs:enumeration value = "Deblurring"/>
								<xs:enumeration value = "Filter"/>
								<xs:enumeration value = "Mask"/>
								<xs:enumeration value = "Other"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "PlateRef">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "PlateID" type = "PlateID" use = "required"/>
					<xs:attribute name = "Well" use = "required">
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:pattern value = "[A-Z]+[0-9]+"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name = "Sample" type = "xs:integer"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "AuxLightSourceRef">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "LightSourceID" type = "LightSourceID" use = "required"/>
					<xs:attribute name = "AuxTechnique" use = "required">
						<xs:simpleType>
							<xs:restriction base = "xs:string">
								<xs:enumeration value = "Photobleaching"/>
								<xs:enumeration value = "Photoactivation"/>
								<xs:enumeration value = "Uncaging"/>
								<xs:enumeration value = "Laser Dissection"/>
								<xs:enumeration value = "Optical Trapping"/>
								<xs:enumeration value = "Photoablation"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name = "Attenuation" type = "PercentFraction"/>
					<xs:attribute name = "Wavelength" type = "xs:positiveInteger"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "ObjectiveRef">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "Reference">
					<xs:attribute name = "ObjectiveID" type = "ObjectiveID" use = "required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
</xs:schema>