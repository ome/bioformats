<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.0.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xs:schema xmlns = "http://www.openmicroscopy.org/XMLschemas/OME/RC2/ome.xsd"
	 targetNamespace = "http://www.openmicroscopy.org/XMLschemas/OME/RC2/ome.xsd"
	 xmlns:xs = "http://www.w3.org/2001/XMLSchema"
	 version = "RC2"
	 elementFormDefault = "qualified">
<!--
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    #
    # Copyright (C) 2002-2011 Open Microscopy Environment
    #       Massachusetts Institute of Technology,
    #       National Institutes of Health,
    #       University of Dundee,
    #       University of Wisconsin at Madison
    #
    # This work is licensed under the
    #       Creative Commons Attribution 3.0 Unported License.
    # To view a copy of this license, visit
    #       http://creativecommons.org/licenses/by/3.0/
    # or send a letter to
    #       Creative Commons, 444 Castro Street, Suite 900,
    #       Mountain View, California, 94041, USA.
    # For attribution instructions, visit
    #       http://www.openmicroscopy.org/info/attribution
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
	<xs:annotation>
		<xs:documentation>
			Open Microscopy Environment
			OME XML Schema 1.0 RC2
			Copyright (C) 2002-2011 Open Microscopy Environment
		</xs:documentation>
	</xs:annotation>
	<xs:element name = "OME">
		<xs:annotation>
			<xs:documentation>The OME element must contain one or more Dataset elements.
All other elements are optional.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Project" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Screen" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Experimenter" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Group" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Instrument" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "Dataset" maxOccurs = "unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Dataset">
		<xs:annotation>
			<xs:documentation>If any of the required Dataset attributes are missing, its guaranteed to be an invalid document.
The only required elements are the CreationDate and Data.
The Dataset may also contain optional elements containing vendor-specific data (#wildCard element in the diagram).


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "CreationDate"/>
				<xs:element ref = "Description" minOccurs = "0"/>
				<xs:element ref = "ExperimenterRef" minOccurs = "0"/>
				<xs:element ref = "GroupRef" minOccurs = "0"/>
				<xs:element ref = "ProjectRef" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "InstrumentRef" minOccurs = "0"/>
				<xs:element ref = "Thumbnail" minOccurs = "0"/>
				<xs:element ref = "XYinfo" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "XYZinfo" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "WavelengthInfo" minOccurs = "0" maxOccurs = "unbounded"/>
				<xs:element ref = "DisplayOptions" minOccurs = "0"/>
				<xs:choice minOccurs = "0">
					<xs:element ref = "StageLabel"/>
					<xs:element ref = "PlateInfo"/>
				</xs:choice>
				<xs:element ref = "Data"/>
				<xs:any namespace = "http://www.w3.org/2001/XMLSchema" processContents = "strict" minOccurs = "0" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "GUID" type = "Hex40"/>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "DatasetType" use = "required" type = "xs:string"/>
			<xs:attribute name = "SizeX" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "SizeY" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "SizeZ" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "NumWaves" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "NumTimes" use = "required" type = "xs:positiveInteger"/>
			<xs:attribute name = "PixelSizeX" use = "required" type = "xs:float"/>
			<xs:attribute name = "PixelSizeY" use = "required" type = "xs:float"/>
			<xs:attribute name = "PixelSizeZ" use = "required" type = "xs:float"/>
			<xs:attribute name = "TimeIncrement" type = "xs:float"/>
			<xs:attribute name = "WaveStart" type = "xs:integer"/>
			<xs:attribute name = "WaveIncrement" type = "xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "XYZinfo">
		<xs:annotation>
			<xs:documentation>One of these per XYZ stack in the dataset (optional).  A single plane dataset is still technically a stack.
Additional elements may be present as vendor extensions.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "DeltaTime" minOccurs = "0"/>
				<xs:element ref = "Centroid" minOccurs = "0"/>
				<xs:element ref = "Stats" minOccurs = "0"/>
				<xs:any namespace = "http://www.w3.org/2001/XMLSchema" processContents = "strict" minOccurs = "0" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "WaveNumber" use = "required" type = "xs:integer"/>
			<xs:attribute name = "TimePoint" use = "required" type = "xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "XYinfo">
		<xs:annotation>
			<xs:documentation>One of these per plane in the dataset (optional).
Additional elements may be present as vendor extensions.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "DeltaTime" minOccurs = "0"/>
				<xs:element ref = "ExpTime" minOccurs = "0"/>
				<xs:element ref = "StagePos" minOccurs = "0"/>
				<xs:element ref = "Stats" minOccurs = "0"/>
				<xs:any namespace = "http://www.w3.org/2001/XMLSchema" processContents = "strict" minOccurs = "0" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "Zsection" use = "required" type = "xs:integer"/>
			<xs:attribute name = "WaveNumber" use = "required" type = "xs:integer"/>
			<xs:attribute name = "TimePoint" use = "required" type = "xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "CreationDate" type = "xs:dateTime"/>
	<xs:element name = "DeltaTime" type = "xs:float">
		<xs:annotation>
			<xs:documentation>Time in seconds since acquisition of this document began.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "ExpTime" type = "xs:float">
		<xs:annotation>
			<xs:documentation>Exposure time in seconds.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Data">
		<xs:annotation>
			<xs:documentation>Document will be unreadable if any attributes are missing.
The Pixels may be external or internal.
DimensionOrder is a string enumeration which must be set to 'XYZWT', 'XYZTW', 'XYWTZ', 'XYWZT', 'XYTWZ',  or 'XYTZW'.
BitsPerPixel is an integer enumeration and must be set to 1, 8 or 16.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:element ref = "External"/>
				<xs:element ref = "BinData"/>
			</xs:choice>
			<xs:attribute name = "DimensionOrder" use = "required">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "XYZWT"/>
						<xs:enumeration value = "XYZTW"/>
						<xs:enumeration value = "XYWTZ"/>
						<xs:enumeration value = "XYWZT"/>
						<xs:enumeration value = "XYTWZ"/>
						<xs:enumeration value = "XYTZW"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "BitsPerPixel" use = "required">
				<xs:simpleType>
					<xs:restriction base = "xs:integer">
						<xs:enumeration value = "1"/>
						<xs:enumeration value = "8"/>
						<xs:enumeration value = "16"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name = "BigEndian" use = "required" type = "xs:boolean"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "External">
		<xs:annotation>
			<xs:documentation>If an external file is used, this tag must be specified with the required href attribute.
The file pointed to is a raw binary pixel dump.
The Offset attribute specifies the number of bytes after the start of the file where the dump begins.
The SHA1 attribute is a digest (openssl sha1) of the file pointed to by href.
Compression may be set to 'gzip' or 'bzip2'.
If the external file is compressed, and the Compression attribute is set, the SHA1 and href attribute refer to the compressed file.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "href" use = "required" type = "xs:anyURI"/>
			<xs:attribute name = "Offset" type = "xs:integer"/>
			<xs:attribute name = "SHA1" use = "required" type = "Hex40"/>
			<xs:attribute name = "Compression">
				<xs:simpleType>
					<xs:restriction base = "xs:string">
						<xs:enumeration value = "gzip"/>
						<xs:enumeration value = "bzip2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name = "BinData" type = "xs:base64Binary">
		<xs:annotation>
			<xs:documentation>Pixel data stored within the XML document is stored in this element using base64 encoding.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "StagePos" type = "XYZfloat">
		<xs:annotation>
			<xs:documentation>This is a stage position in the microscope's reference frame.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Stats">
		<xs:annotation>
			<xs:documentation>The Stats element is used in several places.  It is usually optional, but if used, it must be empty and at least set the Min, Max, and Mean attributes.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Min" use = "required" type = "xs:integer"/>
			<xs:attribute name = "Max" use = "required" type = "xs:integer"/>
			<xs:attribute name = "Mean" use = "required" type = "xs:float"/>
			<xs:attribute name = "GeoMean" type = "xs:float"/>
			<xs:attribute name = "Sigma" type = "xs:float"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "ExWave" type = "xs:integer">
		<xs:annotation>
			<xs:documentation>Excitation wavelength in nm.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "EmWave" type = "xs:integer">
		<xs:annotation>
			<xs:documentation>The emission wavelength in nm.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "NDfilter">
		<xs:annotation>
			<xs:documentation>A neutral-density filter value between 0.0 and 1.0</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base = "xs:float">
				<xs:maxInclusive value = "1.0"/>
				<xs:minInclusive value = "0.0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name = "WavelengthInfo">
		<xs:annotation>
			<xs:documentation>If used, there must be one per wavelength in the dataset.
Even a single-plane dataset has to have one.
If used, either the fluor or the excitation and emission wavelengths (in nm) or both must be specified.
Currently, these are both optional, which is an incorrect schema specification (FIXME?).
Either WavelengthInfo element or the WaveStart and WaveIncrement Dataset attributes must be used.
This is also not correctly specified in the schema (FIXME?)

			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "ExWave" minOccurs = "0"/>
				<xs:element ref = "EmWave" minOccurs = "0"/>
				<xs:element ref = "Fluor" minOccurs = "0"/>
				<xs:element ref = "NDfilter" minOccurs = "0"/>
				<xs:any namespace = "http://www.w3.org/2001/XMLSchema" processContents = "strict" minOccurs = "0" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "WaveNumber" use = "required" type = "xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "DisplayOptions">
		<xs:annotation>
			<xs:documentation>There is optionally one of these per dataset.
This specifies mapping of pixels to RGB or greyscale colorspace with one byte per pixel per channel.
Elements of type WaveScaleType specify the scaling of pixel values to colorspace values.
These elements are empty, and have 3-4 attributes:  WaveNumber, Threshold, Clip and optional Scale.
The WaveNumber specifies the wavenumber of the color chanel.  Pixel values between Threshold and Clip will be assigned values 0-255, respectively.
Values below Threshold or above Clip will be assigned 0 and 255 respectively.
Either the GreyWave or one or more of RedWave, GreenWave, BlueWave must be specified.
The Projection element specifies that the display is a maximum intensity projection.
The range of Z-sections for the projection is specified with the Zstart and Zstop attributes.
Presence of the Movie element indicates that the display should be a movie.
The range of timepoints to display in the movie is specified by the Tstart and Tstop attributes.
The MIME type of the desired video format is specified by the MIMEtype attribute.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:sequence>
						<xs:element ref = "RedWave" minOccurs = "0"/>
						<xs:element ref = "GreenWave" minOccurs = "0"/>
						<xs:element ref = "BlueWave" minOccurs = "0"/>
					</xs:sequence>
					<xs:element ref = "GreyWave"/>
				</xs:choice>
				<xs:element ref = "Projection" minOccurs = "0"/>
				<xs:element ref = "Movie" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "Zoom" type = "xs:float"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "RedWave" type = "WaveScaleType">
		<xs:annotation>
			<xs:documentation>The wave number, Threshold, Clip and optional Scale for the red channel of an RGB image.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "GreenWave" type = "WaveScaleType">
		<xs:annotation>
			<xs:documentation>The wave number, Threshold, Clip and optional Scale for the green channel of an RGB image.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "BlueWave" type = "WaveScaleType">
		<xs:annotation>
			<xs:documentation>The wave number, Threshold, Clip and optional Scale for the blue channel of an RGB image.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "GreyWave" type = "WaveScaleType">
		<xs:annotation>
			<xs:documentation>The wave number, Threshold, Clip and optional Scale for a greyscale image.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name = "WaveScaleType">
		<xs:attribute name = "WaveNumber" use = "required" type = "xs:integer"/>
		<xs:attribute name = "Threshold" use = "required" type = "xs:integer"/>
		<xs:attribute name = "Clip" use = "required" type = "xs:integer"/>
		<xs:attribute name = "Scale" type = "xs:float"/>
	</xs:complexType>
	<xs:element name = "Projection">
		<xs:annotation>
			<xs:documentation>The presence of this element indicates the user wants to view the dataset as a maximum intensity projection.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Zstart" use = "required" type = "xs:integer"/>
			<xs:attribute name = "Zstop" use = "required" type = "xs:integer"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Movie">
		<xs:annotation>
			<xs:documentation>Presence of this element indicates the user wants to view the dataset as a movie.
The range of timepoints to be displayed are indicated by the Tstart and Tstop attributes.
The desired movie format (MIME type) is specified by MIMEtype.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "Tstart" use = "required" type = "xs:integer"/>
			<xs:attribute name = "Tstop" use = "required" type = "xs:integer"/>
			<xs:attribute name = "MIMEtype" use = "required" type = "MIMEtype"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Instrument">
		<xs:annotation>
			<xs:documentation>This element describes the instrument used to capture the dataset.
It is primarily a container for manufacturer's model and catalog numbers for the Microscope, Camera, Objective and Filters components.
The Objective element contains the additional elements LensNA and Magnification.
The Filters element is composed either of separate excitation and emission filters or a single filter set.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Microscope"/>
				<xs:element ref = "Camera"/>
				<xs:element ref = "Objective"/>
				<xs:element ref = "Filters"/>
			</xs:sequence>
			<xs:attribute name = "InstrumentID" type = "xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "StageLabel" type = "xs:string">
		<xs:annotation>
			<xs:documentation>The StageLabel is simply a string to describe a particular stage position.
This is usefull for experiments involving visiting several points on a slide over a timecourse.


			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "PlateInfo">
		<xs:annotation>
			<xs:documentation>The PlateInfo element associates the dataset with a microtiter plate.
This element must contain Well and Plate elements to further define this relationship.
When several images are acquired within a single well, they are differentiated by using the optional Sample element.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Sample" minOccurs = "0"/>
				<xs:element ref = "Well"/>
				<xs:element ref = "Plate"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Experimenter" type = "ExperimenterType">
		<xs:annotation>
			<xs:documentation>The ExperimenterID attribute is required if there is more than one Experimenter listed under the OME element.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "OMEname" type = "xs:string">
		<xs:annotation>
			<xs:documentation>This is the username of the experimenter (in a 'unix' or 'database' sense).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "FirstName" type = "xs:string"/>
	<xs:element name = "LastName" type = "xs:string"/>
	<xs:element name = "email" type = "xs:string"/>
	<xs:element name = "Plate">
		<xs:annotation>
			<xs:documentation>This element identifies microtiter plates within a larger experiment.
The EternRef attribute may contain a reference to an external database.
If more than one plate is defined in the entire document, the PlateID attribute must be used.
The Name identifies the plate to the user.  It is used much like the PlateID, and so must be unique.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "ExternRef" type = "ExternDBref"/>
			<xs:attribute name = "PlateID" type = "xs:positiveInteger"/>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Sample">
		<xs:annotation>
			<xs:documentation>This is a sample number within a well.  It has an optional ExternRef attribute which may specify a link to an external database.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base = "xs:integer">
					<xs:attribute name = "ExternRef" type = "ExternDBref"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Well">
		<xs:annotation>
			<xs:documentation>Standard well designation (A12, B01, etc).  This is not currently checked against a regular expression (FIXME?)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base = "xs:string">
					<xs:attribute name = "ExternRef" type = "ExternDBref"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Screen">
		<xs:annotation>
			<xs:documentation>The Screen element is a grouping for Plates - it must contain one or more Plate elements that define the plates.
The required attribute is the Screen's Name.
The ScreenID is required if there is more than one screen defined in the document.
The Screen element may contain an ExternalRef attribute that refers to an external database.
A description of the screen may be specified in the Description element.
Screens may contain overlapping sets of Plates - Screens and Plates have a many-to-many relationship.

			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Description" minOccurs = "0"/>
				<xs:element ref = "Plate" maxOccurs = "unbounded"/>
			</xs:sequence>
			<xs:attribute name = "ExternRef" type = "ExternDBref"/>
			<xs:attribute name = "ScreenID" type = "xs:positiveInteger"/>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Objective">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base = "ManufactSpec">
					<xs:sequence>
						<xs:element ref = "LensNA"/>
						<xs:element ref = "Magnification"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Filters">
		<xs:annotation>
			<xs:documentation>Filters may be separate excitation and emission filters specified by the ExFilter and EmFilter tags respectively, or
a filter set specified by FilterSet.  All elements are ManufactSpec type, so they have the required attributes Manufacturer, Model, and CatalogNumber.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:sequence>
					<xs:element ref = "ExFilter"/>
					<xs:element ref = "EmFilter"/>
				</xs:sequence>
				<xs:element ref = "FilterSet"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Magnification" type = "xs:float">
		<xs:annotation>
			<xs:documentation>The magnification of the lens - i.e. '60.0' is a 60X lens.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "LensNA" type = "xs:float">
		<xs:annotation>
			<xs:documentation>The numerical apperture of the lens.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "ExFilter" type = "ManufactSpec">
		<xs:annotation>
			<xs:documentation>Excitation filter manufacturer specification</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "EmFilter" type = "ManufactSpec">
		<xs:annotation>
			<xs:documentation>Emission filter manufacturer specification</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "FilterSet" type = "ManufactSpec">
		<xs:annotation>
			<xs:documentation>Filter set manufacturer specification</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Camera" type = "ManufactSpec"/>
	<xs:element name = "Description" type = "xs:string">
		<xs:annotation>
			<xs:documentation>Just some free-form text to describe Datasets, Screens and Projects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Microscope" type = "ManufactSpec">
		<xs:annotation>
			<xs:documentation>The microscope's manufacturer specification.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name = "ManufactSpec">
		<xs:attribute name = "Manufacturer" use = "required" type = "xs:string"/>
		<xs:attribute name = "Model" use = "required" type = "xs:string"/>
		<xs:attribute name = "CatalogNumber" use = "required" type = "xs:string"/>
	</xs:complexType>
	<xs:element name = "Thumbnail">
		<xs:annotation>
			<xs:documentation>The thumbnail may be an external URI reference specified by the href attribute, or it may contain an SVG sub-document (denoted by the #wildCard 'element').
The MIMEtype is a required attribute, and must be set to 'SVG' if the tag's contents are an SVG document.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:any namespace = "http://www.w3.org/2000/svg" processContents = "strict" minOccurs = "0"/>
			</xs:sequence>
			<xs:attribute name = "href" type = "xs:anyURI"/>
			<xs:attribute name = "MIMEtype" use = "required" type = "MIMEtype"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Fluor" type = "xs:string">
		<xs:annotation>
			<xs:documentation>Any of the common fluors, i.e. 'FITC', 'Texas Red', etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Centroid" type = "XYZfloat">
		<xs:annotation>
			<xs:documentation>The 'center of mass' of the XYZ stack.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Project">
		<xs:annotation>
			<xs:documentation>The ProjectID attribute is required if there is more than one Project listed under the OME element
Datasets can be grouped into projects using a many-to-many relationship.
A Dataset may contain one or more ProjectRef elements that point to Projects defined under the OME element.


			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "Description" minOccurs = "0"/>
				<xs:element ref = "ExperimenterRef"/>
			</xs:sequence>
			<xs:attribute name = "Name" use = "required" type = "xs:string"/>
			<xs:attribute name = "ProjectID" type = "xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name = "MIMEtype">
		<xs:restriction base = "xs:string"/>
	</xs:simpleType>
	<xs:simpleType name = "ExternDBref">
		<xs:restriction base = "xs:string"/>
	</xs:simpleType>
	<xs:simpleType name = "Hex40">
		<xs:restriction base = "xs:hexBinary">
			<xs:length value = "20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name = "XYZfloat">
		<xs:attribute name = "X" use = "required" type = "xs:float"/>
		<xs:attribute name = "Y" use = "required" type = "xs:float"/>
		<xs:attribute name = "Z" type = "xs:float"/>
	</xs:complexType>
	<xs:element name = "ProjectRef">
		<xs:annotation>
			<xs:documentation>There may be one or more of these in a Dataset.
This empty element has a required ProjectID attribute that refers to Projects defined within the OME element.

			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "ProjectID" use = "required" type = "xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "ExperimenterRef">
		<xs:annotation>
			<xs:documentation>This empty element has a required ExperimenterID attribute which refers to Experimenters defined within OME.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "ExperimenterID" use = "required" type = "xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>
	<xs:element name = "Group" type = "GroupType">
		<xs:annotation>
			<xs:documentation>The GroupID attribute is required if there is more than one Group listed under the OME element.
The Name attribute is required.  In addition contact information can be specified for the leader of the group and a contact person.
The Leader and/or Contact may themselves be experimenters defined in OME,
in which case they can refer to Experimenters defined within OME using their ExperimenterRef elements.

			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name = "Leader" type = "ContactType"/>
	<xs:complexType name = "ExperimenterType">
		<xs:sequence>
			<xs:element ref = "FirstName"/>
			<xs:element ref = "LastName"/>
			<xs:element ref = "email"/>
			<xs:element ref = "OMEname"/>
		</xs:sequence>
		<xs:attribute name = "ExperimenterID" type = "xs:positiveInteger"/>
	</xs:complexType>
	<xs:element name = "Contact" type = "ContactType"/>
	<xs:element name = "GroupRef">
		<xs:annotation>
			<xs:documentation>This empty element has a reference (the GroupID attribute) to a Group defined within OME.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "GroupID" use = "required" type = "xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name = "GroupType">
		<xs:sequence>
			<xs:element ref = "Leader" minOccurs = "0"/>
			<xs:element ref = "Contact" minOccurs = "0"/>
		</xs:sequence>
		<xs:attribute name = "Name" use = "required" type = "xs:string"/>
		<xs:attribute name = "GroupID" type = "xs:positiveInteger"/>
	</xs:complexType>
	<xs:complexType name = "ContactType">
		<xs:choice>
			<xs:sequence>
				<xs:element ref = "FirstName"/>
				<xs:element ref = "LastName"/>
				<xs:element ref = "email"/>
			</xs:sequence>
			<xs:element ref = "ExperimenterRef"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name = "InstrumentRef">
		<xs:annotation>
			<xs:documentation>This empty element can be used (via the required InstrumentID attribute) to refer to an Instrument defined within OME.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name = "InstrumentID" use = "required" type = "xs:positiveInteger"/>
		</xs:complexType>
	</xs:element>
</xs:schema>