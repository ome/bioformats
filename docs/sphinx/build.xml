<!--
build.xml

Ant build file for Bio-Formats Sphinx documentation.
Download Apache Ant from http://ant.apache.org/.
Type "ant -p" for a list of targets.
-->

<project name="sphinx" default="html" basedir=".">
  <description>Build file for sphinx documentation</description>
  <property name="root.dir" location="../.."/>
  <import file="${root.dir}/ant/global.xml"/>

  <property name="sphinx.build" value="sphinx-build"/>
  <property name="sphinx.warnopts" value=""/>
  <property name="sphinx.opts" value=""/>
  <property name="sphinx.srcdir" location="."/>
  <property name="sphinx.builddir" location="_build"/>

  <target name="init">
    <property name="release.version.regex" value="v?([0-9]+)[.]([0-9]+)[.]([0-9]+)(.*)"/>
    <propertyregex property="release.major" input="${release.version}" regexp="${release.version.regex}" select="\1"/>
    <propertyregex property="release.minor" input="${release.version}" regexp="${release.version.regex}" select="\2"/>

    <property name="sphinx.release" value="${release.version}"/>
    <property name="sphinx.version" value="${release.major}.${release.minor}"/>
    <if>
      <isset property="sphinx.source.branch"/>
      <then>
        <property name="sphinx.bioformats.source.branch" value="${sphinx.source.branch}"/>
        <property name="sphinx.common_java.source.branch" value="${sphinx.source.branch}"/>
      </then>
    </if>
    <property name="sphinx.bioformats.source.branch" value="develop"/>
    <property name="sphinx.common_java.source.branch" value="master"/>
    <if>
      <isset property="sphinx.source.user"/>
      <then>
        <property name="sphinx.openmicroscopy_source.user" value="${sphinx.source.user}"/>
        <property name="sphinx.ome_source.user" value="${sphinx.source.user}"/>
      </then>
    </if>
    <property name="sphinx.openmicroscopy_source.user" value="openmicroscopy"/>
    <property name="sphinx.ome_source.user" value="ome"/>
    <property name="sphinx.omerodoc.uri" value="http://www.openmicroscopy.org/site/support/omero5.2"/>

    <mkdir dir="${sphinx.builddir}"/>
    <copy file="conf.py" tofile="${sphinx.builddir}/conf.py" overwrite="true"/>
    <replace file="${sphinx.builddir}/conf.py" token="@sphinx_srcdir@" value="${sphinx.srcdir}"/>
    <replace file="${sphinx.builddir}/conf.py" token="@sphinx_builddir@" value="${sphinx.builddir}"/>
    <replace file="${sphinx.builddir}/conf.py" token="@bioformats_source_branch@" value="${sphinx.bioformats.source.branch}"/>
    <replace file="${sphinx.builddir}/conf.py" token="@common_java_source_branch@" value="${sphinx.common_java.source.branch}"/>
    <replace file="${sphinx.builddir}/conf.py" token="@openmicroscopy_source_user@" value="${sphinx.openmicroscopy_source.user}"/>
    <replace file="${sphinx.builddir}/conf.py" token="@ome_source_user@" value="${sphinx.ome_source.user}"/>
    <replace file="${sphinx.builddir}/conf.py" token="@sphinx_omerodoc_uri@" value="${sphinx.omerodoc.uri}"/>
    <replace file="${sphinx.builddir}/conf.py" token="@ome_common_version@" value="${ome-common.version}"/>
    <replace file="${sphinx.builddir}/conf.py" token="@ome_model_version@" value="${ome-model.version}"/>
  </target>

  <macrodef name="sphinx" description="Run sphinx-build">
    <attribute name="buildtype" default="html"/>
    <attribute name="srcdir" default="."/>
    <attribute name="destdir" default=""/>
    <attribute name="opts" default=""/>
    <attribute name="warnopts" default=""/>
    <sequential>
      <exec executable="${sphinx.build}" failonerror="true">
        <arg value="-D"/>
        <arg value="release=${sphinx.release}"/>
        <arg value="-D"/>
        <arg value="version=${sphinx.version}"/>
        <arg value="-b"/>
        <arg value="@{buildtype}"/>
        <arg value="-c"/>
        <arg value="${sphinx.builddir}"/>
        <arg line="@{opts}"/>
        <arg line="@{warnopts}"/>
        <arg value="@{srcdir}"/>
        <arg value="@{destdir}"/>
      </exec>
    </sequential>
  </macrodef>

  <target name="html" depends="init">
    <sphinx buildtype="html"
            srcdir="${sphinx.srcdir}"
            destdir="${sphinx.builddir}/html"
            opts="${sphinx.opts}"
            warnopts="${sphinx.warnopts}"/>
    <delete dir="${artifact.dir}/bio-formats-doc-${sphinx.release}"/>
    <copy todir="${artifact.dir}/bio-formats-doc-${sphinx.release}">
      <!--
        include (none) to prevent problems if component.resources-bin is empty
      -->
      <fileset dir="${sphinx.builddir}/html"/>
    </copy>
    <zip destfile="${artifact.dir}/bio-formats-doc-${sphinx.release}.zip">
      <zipfileset dir="${sphinx.builddir}/html" includes="**/*" prefix="bio-formats-doc-${sphinx.release}"/>
    </zip>
    <delete dir="${artifact.dir}/bio-formats-doc-${sphinx.release}"/>
  </target>

  <target name="linkcheck" depends="init">
    <sphinx buildtype="linkcheck" srcdir="."
            destdir="${sphinx.builddir}/linkcheck"
            opts="${sphinx.opts}"
            warnopts="${sphinx.warnopts}"/>
  </target>

  <target name="clean">
    <delete dir="${sphinx.builddir}"/>
  </target>

</project>
