Code generation with xsd-fu
===========================

XSD Fu is a Python application designed to digest OME XML schema and produce
an object oriented Java infrastructure to ease work with an XML DOM tree.

Requirements:

- `Python <http://python.org>`_ 2.4+
- `Genshi <http://genshi.edgewall.org>`_ 0.5
- Complete checkout of the `Bio-Formats repository <http://github.com/openmicroscopy/bioformats>`_

.. note::

  `Genshi 0.5 <http://genshi.edgewall.org/milestone/0.5>`_ was released
  on June 9th 2008. You can either install from source or download a compatible
  .egg for your system on the `Genshi download page <http://genshi.edgewall.org/wiki/Download>`_.

Checking out the source
-----------------------

This will get the entire source tree. xsd-fu is in components/xsd-fu

``git clone https://github.com/openmicroscopy/bioformats``

Running the code generator
--------------------------

If you *do* have Genshi already installed, you can run xsd-fu script with no
arguments to examine the syntax:

::

  $ ./xsd-fu -o ../../
  Missing subcommand!
  Usage: ./xsd-fu <subcommand> ...
  Executes an OME-XML Schema definition parsing and code generation subcommand.

  Available subcommands:
    java_classes
    omexml_metadata
    omero_metadata
    omero_model
    metadata_store
    metadata_retrieve
    metadata_aggregate
    dummy_metadata
    filter_metadata
    enum_types
    enum_handlers
    doc_gen
    tab_gen
    debug

  Report bugs to OME Devel <ome-devel@lists.openmicroscopy.org.uk>

If you *do not* have Genshi installed you can use a downloaded Python .egg for
your platform as follows:

::

  $ export PYTHONPATH=Genshi-0.5-py2.4-linux-i686.egg
  $ ./xsd-fu -o ../../
  Missing subcommand!
  Usage: ./xsd-fu <subcommand> ...
  Executes an OME-XML Schema definition parsing and code generation subcommand.

  Available subcommands:
    java_classes
    omexml_metadata
    omero_metadata
    omero_model
    metadata_store
    metadata_retrieve
    metadata_aggregate
    dummy_metadata
    filter_metadata
    enum_types
    enum_handlers
    doc_gen
    tab_gen
    debug

  Report bugs to OME Devel <ome-devel@lists.openmicroscopy.org.uk>

.. note::

  XsdFu is now used for many different types of code generation tasks
  (mostly targeted at the OMERO and Bio-Formats 4.2.0 releases) as outlined by
  the subcommand structure above.

Generating the OME-XML Java toolchain
-------------------------------------

The following sections outline how to generate parts of the OME-XML Java
toolchain which are composed of:

- OME model objects
- Enumerations for OME model properties
- Enumeration handlers for regular expression matching of enumeration strings
- Metadata store and Metadata retrieve interfaces for all OME model properties
- Various implementations of Metadata store and/or Metadata retrieve interfaces

All of the above can be generated by this Ant command:

::

  $ cd components/ome-xml
  $ ant generate-source

These commands internally call xsd-fu as follows:

Java classes for OME model objects
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

  $ ./xsd-fu java_classes -p 'ome.xml.model' -o \
    ../ome-xml/target/generated-sources/ \
    ../specification/released-schema/2013-06/ome.xsd \
    ../specification/released-schema/2013-06/BinaryFile.xsd \
    ../specification/released-schema/2013-06/ROI.xsd \
    ../specification/released-schema/2013-06/SA.xsd \
    ../specification/released-schema/2013-06/SPW.xsd

Enumeration classes for OME model properties
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

  $ ./xsd-fu enum_types -p 'ome.xml.model.enums' -o \
    ../ome-xml/target/generated-sources/ \
    ../specification/released-schema/2013-06/ome.xsd \
    ../specification/released-schema/2013-06/BinaryFile.xsd \
    ../specification/released-schema/2013-06/ROI.xsd \
    ../specification/released-schema/2013-06/SA.xsd \
    ../specification/released-schema/2013-06/SPW.xsd

Enumeration handlers for OME model properties
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

  $ ./xsd-fu enum_handlers -p 'ome.xml.model.enums.handlers' -o \
    ../ome-xml/target/generated-sources/ \
    ../specification/released-schema/2013-06/ome.xsd \
    ../specification/released-schema/2013-06/BinaryFile.xsd \
    ../specification/released-schema/2013-06/ROI.xsd \
    ../specification/released-schema/2013-06/SA.xsd \
    ../specification/released-schema/2013-06/SPW.xsd

Metadata store and Metadata retrieve interfaces
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

  $ ./xsd-fu metadata -o ../ome-xml/target/generated-sources/ \
    ../specification/released-schema/2013-06/ome.xsd \
    ../specification/released-schema/2013-06/BinaryFile.xsd \
    ../specification/released-schema/2013-06/ROI.xsd \
    ../specification/released-schema/2013-06/SA.xsd \
    ../specification/released-schema/2013-06/SPW.xsd

OMEXMLMetadataImpl Metadata store and Metadata retrieve implementation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

  $ ./xsd-fu omexml_metadata -o ../ome-xml/target/generated-sources/ \
    ../specification/released-schema/2013-06/ome.xsd \
    ../specification/released-schema/2013-06/BinaryFile.xsd \
    ../specification/released-schema/2013-06/ROI.xsd \
    ../specification/released-schema/2013-06/SA.xsd \
    ../specification/released-schema/2013-06/SPW.xsd

Working with Enumerations and Enumeration Handlers
--------------------------------------------------

XsdFu code generates enumeration regular expressions using a flexible
:source:`configuration file <components/xsd-fu/cfg/enum_handler.cfg>`.

Each enumeration has a key-value listing of regular expression to exact enumeration value matches. For example:

::

  [Correction]
  ".*Pl.*Apo.*" = "PlanApo"
  ".*Pl.*Flu.*" = "PlanFluor"
  "^\\s*Vio.*Corr.*" = "VioletCorrected"
  ".*S.*Flu.*" = "SuperFluor"
  ".*Neo.*flu.*" = "Neofluar"
  ".*Flu.*tar.*" = "Fluotar"
  ".*Fluo.*" = "Fluor"
  ".*Flua.*" = "Fluar"
  "^\\s*Apo.*" = "Apo"


Generate OMERO model specification files
----------------------------------------

This work was completed as part of the Update XsdFu (:ticket:`8086`) story.

::

  $ cd components/xsd-fu
  $ ./xsd-fu omero_model -o where/to/place/output/ \
    ../specification/inprogress/ome.xsd ../specification/inprogress/SPW.xsd \
    ../specification/inprogress/SA.xsd ../specification/inprogress/ROI.xsd

Special Thanks
--------------

A special thanks goes out to `Dave Kuhlman <http://www.rexx.com/~dkuhlman/>`_
for his fabulous work on `generateDS <http://www.rexx.com/~dkuhlman/generateDS.html>`_ which XSD Fu makes heavy use of internally.
