<!--
toplevel.xml

Toplevel targets for Bio-Formats builds.
Download Apache Ant from http://ant.apache.org/.
Type "ant -p" for a list of targets.
-->

<project>
  <property name="root.dir" location="${basedir}"/>
  <import file="${root.dir}/ant/global.xml"/>

  <!-- Global build targets -->

  <target name="compile"
    depends="compile-formats-gpl,
      compile-formats-api,
      compile-formats-bsd,
      compile-turbojpeg"
    description="compile classes for all components"/>

  <target name="jars"
    depends="copy-jars,
      jar-formats-gpl,
      jar-formats-api,
      jar-formats-bsd,
      jar-turbojpeg"
    description="generate JAR files for software packages"/>

  <target name="findbugs"
    depends="findbugs-formats-gpl,
      findbugs-formats-api,
      findbugs-formats-bsd"
    description="run findbugs on most components"/>

  <target name="clean"
    depends="
      clean-formats-gpl,
      clean-formats-api,
      clean-formats-bsd,
      clean-turbojpeg"
    description="remove build files for all components">
    <delete dir="${artifact.dir}"/>
    <delete dir="build"/>
  </target>

  <target name="test"
    depends="test-formats-gpl,
      test-formats-api,
      test-formats-bsd,
      test-turbojpeg"
    description="compile and run tests for all components">
  </target>

  <target name="utils"
    depends="jars,
      utils-formats-gpl,
      utils-formats-bsd"
    description="compile all extra utilities"/>

  <target name="copy-jars" description="copy JARS (deprecated)"/>

  <target name="testing-deps" depends="copy-jars"/>

  <!-- API -->

  <target name="deps-formats-api"
    depends="copy-jars"/>

  <target name="compile-formats-api" depends="deps-formats-api"
    description="compile classes for reader and writer APIs">
    <ant dir="components/formats-api" target="formats-api.compile"/>
  </target>

  <target name="jar-formats-api" depends="deps-formats-api"
    description="generate JAR file for reader and writer APIs">
    <ant dir="components/formats-api" target="formats-api.jar"/>
  </target>

  <target name="findbugs-formats-api" depends="jar-formats-api"
    description="run findbugs on reader and writer APIs">
    <ant dir="components/formats-api" target="formats-api.findbugs"/>
  </target>

  <target name="clean-formats-api"
    description="remove build files for reader and writer APIs">
    <ant dir="components/formats-api" target="formats-api.clean"/>
  </target>

  <target name="test-formats-api" depends="jar-formats-api, testing-deps"
    description="compile and run tests for reader and writer APIs">
    <ant dir="components/formats-api" target="test"/>
  </target>

  <!-- BSD Implentation -->

  <target name="deps-formats-bsd"
    depends="copy-jars,
      jar-formats-api,
      jar-turbojpeg"/>

  <target name="compile-formats-bsd" depends="deps-formats-bsd"
    description="compile classes for BSD format implementations">
    <ant dir="components/formats-bsd" target="formats-bsd.compile"/>
  </target>

  <target name="jar-formats-bsd" depends="deps-formats-bsd"
    description="generate JAR file for BSD format implementations">
    <ant dir="components/formats-bsd" target="formats-bsd.jar"/>
  </target>

  <target name="findbugs-formats-bsd" depends="jar-formats-bsd"
    description="run findbugs on BSD format implementations">
    <ant dir="components/formats-bsd" target="formats-bsd.findbugs"/>
  </target>

  <target name="clean-formats-bsd"
    description="remove build files for BSD format implementations">
    <ant dir="components/formats-bsd" target="formats-bsd.clean"/>
  </target>

  <target name="utils-formats-bsd" depends="jar-formats-bsd"
    description="compile extra utilities for BSD format implementations">
    <ant dir="components/formats-bsd" target="formats-bsd.utils"/>
  </target>

  <target name="test-formats-bsd" depends="jar-formats-bsd, testing-deps"
    description="compile and run tests for BSD format implementations">
    <ant dir="components/formats-bsd" target="test"/>
  </target>

  <!-- Bio-Formats -->

  <target name="deps-formats-gpl"
    depends="copy-jars,
      jar-formats-api,
      jar-formats-bsd"/>

  <target name="compile-formats-gpl" depends="deps-formats-gpl"
    description="compile classes for GPL format implementations">
    <ant dir="components/formats-gpl" target="formats-gpl.compile"/>
  </target>

  <target name="jar-formats-gpl" depends="deps-formats-gpl"
    description="generate JAR file for GPL format implementations">
    <ant dir="components/formats-gpl" target="formats-gpl.jar"/>
  </target>

  <target name="findbugs-formats-gpl" depends="jar-formats-gpl"
    description="run findbugs on Bio-Formats">
    <ant dir="components/formats-gpl" target="formats-gpl.findbugs"/>
  </target>

  <target name="clean-formats-gpl"
    depends="clean-formats-api,
      clean-formats-bsd"
    description="remove build files for GPL format implementations">
    <ant dir="components/formats-gpl" target="formats-gpl.clean"/>
  </target>

  <target name="utils-formats-gpl" depends="jar-formats-gpl"
    description="compile extra utilities for GPL format implementations">
    <ant dir="components/formats-gpl" target="formats-gpl.utils"/>
  </target>

  <target name="test-formats-gpl" depends="jar-formats-gpl, testing-deps"
    description="compile and run tests for GPL format implementations">
    <ant dir="components/formats-gpl" target="test"/>
  </target>

  <!-- Turbojpeg -->

  <target name="deps-turbojpeg" depends="copy-jars"/>

  <target name="compile-turbojpeg" depends="deps-turbojpeg"
    description="compile classes for Turbojpeg Java bindings">
    <ant dir="components/forks/turbojpeg" target="turbojpeg.compile"/>
  </target>

  <target name="jar-turbojpeg" depends="deps-turbojpeg"
    description="generate JAR file for Turbojpeg Java bindings">
    <ant dir="components/forks/turbojpeg" target="jar"/>
  </target>

  <target name="clean-turbojpeg"
    description="remove build files for Turbojpeg Java bindings">
    <ant dir="components/forks/turbojpeg" target="turbojpeg.clean"/>
  </target>

  <target name="test-turbojpeg" depends="jar-turbojpeg, testing-deps"
    description="compile and run tests for Turbojpeg Java bindings">
    <ant dir="components/forks/turbojpeg" target="test"/>
  </target>

  <!-- Internal targets -->

  <target name="init"/>

  <!-- Source release -->
  <target name="release" description="zip the git release as bioformats-[dfsg-]${release.version}.zip">
    <mkdir dir="${artifact.dir}"/>
    <exec executable="python" failonerror="true">
      <arg value="${root.dir}/tools/source-archive.py"/>
      <arg value="--release=bioformats"/>
      <arg value="--bioformats-version=${release.version}"/>
      <arg value="--target=${artifact.dir}"/>
    </exec>
    <exec executable="python" failonerror="true">
      <arg value="${root.dir}/tools/source-archive.py"/>
      <arg value="--release=bioformats-dfsg"/>
      <arg value="--bioformats-version=${release.version}"/>
      <arg value="--target=${artifact.dir}"/>
    </exec>
  </target>

  <target name="store-version" description="store version information in a property file">
    <mkdir dir="${artifact.dir}"/>
    <delete file="${artifact.dir}/bioformats.properties"/>
    <propertyfile file="${artifact.dir}/bioformats.properties">
      <entry key="release.version" value="${release.version}"/>
    </propertyfile>
  </target>

  <target name="version" description="print version information">
    <echo>VERSION=${release.version}
BUILD_VERSION=${build.version}
</echo>
  </target>

  <target name="update-copyright" description="update copyright headers">
	<property name="executable-update-copyright"
	            location="tools/update_copyright"/>
    <exec executable="${executable-update-copyright}"/>
  </target>

</project>
